<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 5.0.1 (Python 3.8.8rc1 on win32)" generated="20250214 15:24:38.719" rpa="false" schemaversion="3">
<suite id="s1" name="Suites">
<suite id="s1-s1" name="listarUsuariosTest" source="C:\Users\55619\Dropbox\My PC (DESKTOP-8Q92QEK)\Documents\projetos\servRest\automacao-com-robot-framework-api-web\WEB\tests\listarUsuarios\listarUsuariosTest.robot">
<test id="s1-s1-t1" name="Cenário 01: listar usuários" line="10">
<kw name="gerar usuário para testes de login e abrir sessao" library="loginSteps" type="SETUP">
<kw name="gerar usuário para testes de login" library="commons_api">
<kw name="First Name" library="FakerLibrary">
<var>${nome_login}</var>
<msg timestamp="20250214 15:24:07.187" level="INFO">${nome_login} = Joseph</msg>
<status status="PASS" starttime="20250214 15:24:07.187" endtime="20250214 15:24:07.187"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email_login}</var>
<msg timestamp="20250214 15:24:07.188" level="INFO">${email_login} = samuellane@example.org</msg>
<status status="PASS" starttime="20250214 15:24:07.187" endtime="20250214 15:24:07.188"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha_login}</var>
<arg>special_chars=FALSE</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20250214 15:24:07.189" level="INFO">${senha_login} = wL5kHEsj2Y</msg>
<status status="PASS" starttime="20250214 15:24:07.188" endtime="20250214 15:24:07.189"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250214 15:24:07.692" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20250214 15:24:07.189" endtime="20250214 15:24:07.692"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${email_login}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:07.694" level="INFO">${email_login} = samuellane@example.org</msg>
<status status="PASS" starttime="20250214 15:24:07.693" endtime="20250214 15:24:07.694"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${senha_login}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:07.696" level="INFO">${senha_login} = wL5kHEsj2Y</msg>
<status status="PASS" starttime="20250214 15:24:07.695" endtime="20250214 15:24:07.696"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${nome_login}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:07.696" level="INFO">${nome_login} = Joseph</msg>
<status status="PASS" starttime="20250214 15:24:07.696" endtime="20250214 15:24:07.697"/>
</kw>
<kw name="criar usuário" library="usuariosApiKeywords">
<arg>${nome_login}</arg>
<arg>${email_login}</arg>
<arg>${senha_login}</arg>
<arg>true</arg>
<kw name="Gerar payload para cadastro de cliente" library="usuariosApiKeywords">
<arg>${nome}</arg>
<arg>${email}</arg>
<arg>${senha}</arg>
<arg>${adm}</arg>
<kw name="Criar Payload Para Cadastro De Cliente" library="createPayloads">
<var>${body}</var>
<arg>${NOME}</arg>
<arg>${EMAIL}</arg>
<arg>${SENHA}</arg>
<arg>${ADM}</arg>
<msg timestamp="20250214 15:24:07.700" level="INFO">${body} = {
    "nome": "Joseph",
    "email": "samuellane@example.org",
    "password": "wL5kHEsj2Y",
    "administrador": "true"
}</msg>
<status status="PASS" starttime="20250214 15:24:07.699" endtime="20250214 15:24:07.700"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${body}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:07.701" level="INFO">${body} = {
    "nome": "Joseph",
    "email": "samuellane@example.org",
    "password": "wL5kHEsj2Y",
    "administrador": "true"
}</msg>
<status status="PASS" starttime="20250214 15:24:07.700" endtime="20250214 15:24:07.701"/>
</kw>
<status status="PASS" starttime="20250214 15:24:07.698" endtime="20250214 15:24:07.701"/>
</kw>
<kw name="POST request test" library="commons_api">
<arg>/usuarios</arg>
<arg>${body}</arg>
<arg>201</arg>
<kw name="criar sessao" library="commons_api">
<kw name="Create Session" library="RequestsLibrary">
<arg>api</arg>
<arg>${BASE_URL_API}</arg>
<arg>verify=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20250214 15:24:07.704" level="INFO">Creating Session using : alias=api, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20250214 15:24:07.704" endtime="20250214 15:24:07.705"/>
</kw>
<status status="PASS" starttime="20250214 15:24:07.703" endtime="20250214 15:24:07.705"/>
</kw>
<kw name="Convert To Json" library="JsonValidator">
<var>${body}</var>
<arg>${body}</arg>
<doc>Convert a python object to JsonType.</doc>
<msg timestamp="20250214 15:24:07.706" level="INFO">${body} = {'nome': 'Joseph', 'email': 'samuellane@example.org', 'password': 'wL5kHEsj2Y', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20250214 15:24:07.705" endtime="20250214 15:24:07.706"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20250214 15:24:07.707" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" starttime="20250214 15:24:07.706" endtime="20250214 15:24:07.707"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>api</arg>
<arg>url=${url}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=${status}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20250214 15:24:08.088" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '104'} 
 body=b'{"nome": "Joseph", "email": "samuellane@example.org", "password": "wL5kHEsj2Y", "administrador": "true"}' 
 </msg>
<msg timestamp="20250214 15:24:08.088" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '43f71f30da72e35431b22af3822df905', 'Date': 'Fri, 14 Feb 2025 18:24:07 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "dArDPViLYGdKBj6I"
} 
 </msg>
<msg timestamp="20250214 15:24:08.089" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20250214 15:24:07.708" endtime="20250214 15:24:08.089"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resposta}</var>
<arg>${response.content}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:24:08.090" level="INFO">${resposta} = {
    "message": "Cadastro realizado com sucesso",
    "_id": "dArDPViLYGdKBj6I"
}</msg>
<status status="PASS" starttime="20250214 15:24:08.089" endtime="20250214 15:24:08.090"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resposta_status}</var>
<arg>${response.status_code}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:24:08.091" level="INFO">${resposta_status} = 201</msg>
<status status="PASS" starttime="20250214 15:24:08.090" endtime="20250214 15:24:08.091"/>
</kw>
<kw name="To Json" library="RequestsLibrary">
<var>${resposta}</var>
<arg>${resposta}</arg>
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<msg timestamp="20250214 15:24:08.092" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20250214 15:24:08.092" level="INFO">To JSON using : content={
    "message": "Cadastro realizado com sucesso",
    "_id": "dArDPViLYGdKBj6I"
} </msg>
<msg timestamp="20250214 15:24:08.092" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20250214 15:24:08.093" level="INFO">${resposta} = {'message': 'Cadastro realizado com sucesso', '_id': 'dArDPViLYGdKBj6I'}</msg>
<status status="PASS" starttime="20250214 15:24:08.092" endtime="20250214 15:24:08.093"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${resposta}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:08.094" level="INFO">${resposta} = {'message': 'Cadastro realizado com sucesso', '_id': 'dArDPViLYGdKBj6I'}</msg>
<status status="PASS" starttime="20250214 15:24:08.093" endtime="20250214 15:24:08.094"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${resposta_status}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:08.095" level="INFO">${resposta_status} = 201</msg>
<status status="PASS" starttime="20250214 15:24:08.094" endtime="20250214 15:24:08.095"/>
</kw>
<status status="PASS" starttime="20250214 15:24:07.702" endtime="20250214 15:24:08.096"/>
</kw>
<status status="PASS" starttime="20250214 15:24:07.697" endtime="20250214 15:24:08.096"/>
</kw>
<status status="PASS" starttime="20250214 15:24:07.186" endtime="20250214 15:24:08.096"/>
</kw>
<kw name="Abrir Sessao" library="commons_web">
<kw name="Baixar Chromedriver Path" library="webdriverManager">
<var>${CHROMEDRIVER_PATH}</var>
<msg timestamp="20250214 15:24:08.098" level="INFO">====== WebDriver manager ======</msg>
<msg timestamp="20250214 15:24:09.731" level="INFO">Get LATEST chromedriver version for google-chrome</msg>
<msg timestamp="20250214 15:24:09.814" level="INFO">Get LATEST chromedriver version for google-chrome</msg>
<msg timestamp="20250214 15:24:09.897" level="INFO">Driver [C:\Users\55619\.wdm\drivers\chromedriver\win64\133.0.6943.98\chromedriver.exe] found in cache</msg>
<msg timestamp="20250214 15:24:09.897" level="INFO">C:\Users\55619\.wdm\drivers\chromedriver\win64\133.0.6943.98\chromedriver.exe</msg>
<msg timestamp="20250214 15:24:09.897" level="INFO">${CHROMEDRIVER_PATH} = C:\Users\55619\.wdm\drivers\chromedriver\win64\133.0.6943.98\chromedriver.exe</msg>
<status status="PASS" starttime="20250214 15:24:08.097" endtime="20250214 15:24:09.897"/>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${BASE_URL}</arg>
<arg>${BROWSER}</arg>
<arg>executable_path=${CHROMEDRIVER_PATH}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20250214 15:24:09.899" level="INFO">Opening browser 'Chrome' to base url 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20250214 15:24:09.898" endtime="20250214 15:24:13.469"/>
</kw>
<status status="PASS" starttime="20250214 15:24:08.096" endtime="20250214 15:24:13.470"/>
</kw>
<status status="PASS" starttime="20250214 15:24:07.186" endtime="20250214 15:24:13.470"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{lista_coluna}</var>
<arg>Nome</arg>
<arg>Email</arg>
<arg>Senha</arg>
<arg>administrador</arg>
<arg>Ações</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250214 15:24:13.474" level="INFO">@{lista_coluna} = [ Nome | Email | Senha | administrador | Ações ]</msg>
<status status="PASS" starttime="20250214 15:24:13.471" endtime="20250214 15:24:13.474"/>
</kw>
<kw name="Dado que eu tenha realizado login" library="loginSteps">
<arg>${email_login}</arg>
<arg>${senha_login}</arg>
<kw name="Dado que eu tenha acessado o sistema serverest" library="loginSteps">
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${BOTAO_ENTRAR}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250214 15:24:13.479" endtime="20250214 15:24:13.520"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20250214 15:24:14.368" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="0-selenium-screenshot-1.png"&gt;&lt;img src="0-selenium-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20250214 15:24:13.521" endtime="20250214 15:24:14.369"/>
</kw>
<status status="PASS" starttime="20250214 15:24:13.476" endtime="20250214 15:24:14.369"/>
</kw>
<kw name="Quando preencher usuário &quot;${NOME_LOGIN}&quot; e Senha &quot;${SENHA_LOGIN}&quot;" library="loginSteps" sourcename="Quando preencher usuário &quot;${NOME_LOGIN}&quot; e Senha &quot;${SENHA_LOGIN}&quot;">
<kw name="aguardar elemento estar visivel na tela e preencher" library="loginKeywords">
<arg>${Input_Email_Login}</arg>
<arg>${NOME_LOGIN}</arg>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${elemento_aguardado}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250214 15:24:14.372" endtime="20250214 15:24:14.405"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${elemento_aguardado}</arg>
<arg>${elemento_a_ser_preenchido}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250214 15:24:14.406" level="INFO">Typing text 'samuellane@example.org' into text field 'id=email'.</msg>
<status status="PASS" starttime="20250214 15:24:14.405" endtime="20250214 15:24:14.636"/>
</kw>
<status status="PASS" starttime="20250214 15:24:14.371" endtime="20250214 15:24:14.637"/>
</kw>
<kw name="aguardar elemento estar visivel na tela e preencher" library="loginKeywords">
<arg>${Input_Senha_Login}</arg>
<arg>${SENHA_LOGIN}</arg>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${elemento_aguardado}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250214 15:24:14.639" endtime="20250214 15:24:14.657"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${elemento_aguardado}</arg>
<arg>${elemento_a_ser_preenchido}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250214 15:24:14.658" level="INFO">Typing text 'wL5kHEsj2Y' into text field 'id=password'.</msg>
<status status="PASS" starttime="20250214 15:24:14.658" endtime="20250214 15:24:14.790"/>
</kw>
<status status="PASS" starttime="20250214 15:24:14.637" endtime="20250214 15:24:14.790"/>
</kw>
<status status="PASS" starttime="20250214 15:24:14.370" endtime="20250214 15:24:14.791"/>
</kw>
<kw name="E clicar em &quot;Entrar&quot;" library="commons_web" sourcename="${word} clicar em &quot;${btn}&quot;">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Botao_${btn}}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250214 15:24:14.792" level="INFO">Clicking element '//button[@type="submit"]'.</msg>
<status status="PASS" starttime="20250214 15:24:14.792" endtime="20250214 15:24:14.875"/>
</kw>
<status status="PASS" starttime="20250214 15:24:14.791" endtime="20250214 15:24:14.875"/>
</kw>
<kw name="Então sistema efetuará o &quot;login&quot; com sucesso ao mostrar o texto &quot;${Texto_bem_vindo}&quot;" library="loginSteps" sourcename="Então sistema efetuará o &quot;${login}&quot; com sucesso ao mostrar o texto &quot;${Texto}&quot;">
<kw name="aguardar texto: &quot;${Texto}&quot; estar visivel e printar a tela" library="commons_web" sourcename="aguardar texto: &quot;${Texto}&quot; estar visivel e printar a tela">
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Texto}</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20250214 15:24:14.878" endtime="20250214 15:24:16.007"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20250214 15:24:16.152" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="0-selenium-screenshot-2.png"&gt;&lt;img src="0-selenium-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20250214 15:24:16.008" endtime="20250214 15:24:16.153"/>
</kw>
<status status="PASS" starttime="20250214 15:24:14.876" endtime="20250214 15:24:16.155"/>
</kw>
<status status="PASS" starttime="20250214 15:24:14.876" endtime="20250214 15:24:16.155"/>
</kw>
<status status="PASS" starttime="20250214 15:24:13.474" endtime="20250214 15:24:16.156"/>
</kw>
<kw name="Quando clicar em &quot;Listar&quot; para usuários" library="listarUsuariosSteps" sourcename="Quando clicar em &quot;${btn}&quot; para usuários">
<kw name="aguardar texto: &quot;${Texto_de_listar_usuarios}&quot; estar visivel e printar a tela" library="commons_web" sourcename="aguardar texto: &quot;${Texto}&quot; estar visivel e printar a tela">
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Texto}</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20250214 15:24:16.160" endtime="20250214 15:24:16.183"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20250214 15:24:16.302" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="0-selenium-screenshot-3.png"&gt;&lt;img src="0-selenium-screenshot-3.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20250214 15:24:16.184" endtime="20250214 15:24:16.303"/>
</kw>
<status status="PASS" starttime="20250214 15:24:16.158" endtime="20250214 15:24:16.303"/>
</kw>
<kw name="E clicar em &quot;${btn}&quot;" library="commons_web" sourcename="${word} clicar em &quot;${btn}&quot;">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Botao_${btn}}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250214 15:24:16.306" level="INFO">Clicking element '//h5/../a[contains(text(), 'Listar')]'.</msg>
<status status="PASS" starttime="20250214 15:24:16.305" endtime="20250214 15:24:16.386"/>
</kw>
<status status="PASS" starttime="20250214 15:24:16.304" endtime="20250214 15:24:16.386"/>
</kw>
<kw name="aguardar texto: &quot;${Texto_Lista_Dos_Usuarios}&quot; estar visivel e printar a tela" library="commons_web" sourcename="aguardar texto: &quot;${Texto}&quot; estar visivel e printar a tela">
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Texto}</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20250214 15:24:16.388" endtime="20250214 15:24:16.404"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20250214 15:24:16.561" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="0-selenium-screenshot-4.png"&gt;&lt;img src="0-selenium-screenshot-4.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20250214 15:24:16.404" endtime="20250214 15:24:16.561"/>
</kw>
<status status="PASS" starttime="20250214 15:24:16.387" endtime="20250214 15:24:16.562"/>
</kw>
<status status="PASS" starttime="20250214 15:24:16.156" endtime="20250214 15:24:16.562"/>
</kw>
<kw name="Então sistema apresentará as colunas: &quot;${lista_coluna}&quot;" library="listarUsuariosSteps" sourcename="Então sistema apresentará as colunas: &quot;${list}&quot;">
<kw name="Get WebElements" library="SeleniumLibrary">
<var>${elementos_da_pagina}</var>
<arg>${Lista_Coluna_De_Lista_Dos_Usuarios}</arg>
<doc>Returns a list of WebElement objects matching the ``locator``.</doc>
<msg timestamp="20250214 15:24:16.579" level="INFO">${elementos_da_pagina} = [&lt;selenium.webdriver.remote.webelement.WebElement (session="79edbe897580647e387d6e724edf83f7", element="f.0C69D05D922D8ED5F92D37F60B28B413.d.738957D55C0FEE934706EA2F5E8E2CCA.e.33")&gt;, &lt;selenium.webdriv...</msg>
<status status="PASS" starttime="20250214 15:24:16.563" endtime="20250214 15:24:16.579"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{Lista_Coluna_De_Lista_Dos_Usuarios}</var>
<arg>${elementos_da_pagina}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250214 15:24:16.581" level="INFO">@{Lista_Coluna_De_Lista_Dos_Usuarios} = [ [&lt;selenium.webdriver.remote.webelement.WebElement (session="79edbe897580647e387d6e724edf83f7", element="f.0C69D05D922D8ED5F92D37F60B28B413.d.738957D55C0FEE934706EA2F5E8E2CCA.e.33")&gt;, &lt;selenium.webdr...</msg>
<status status="PASS" starttime="20250214 15:24:16.580" endtime="20250214 15:24:16.581"/>
</kw>
<for flavor="IN">
<var>${element}</var>
<value>@{Lista_Coluna_De_Lista_Dos_Usuarios}</value>
<iter>
<var name="${element}">[&lt;selenium.webdriver.remote.webelement.WebElement (session="79edbe897580647e387d6e724edf83f7", element="f.0C69D05D922D8ED5F92D37F60B28B413.d.738957D55C0FEE934706EA2F5E8E2CCA.e.33")&gt;, &lt;selenium.webdriv...</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${element}</var>
<arg>${element}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20250214 15:24:16.599" level="INFO">${element} = Ações</msg>
<status status="PASS" starttime="20250214 15:24:16.583" endtime="20250214 15:24:16.599"/>
</kw>
<kw name="List Should Contain Value" library="Collections">
<arg>${list}</arg>
<arg>${element}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" starttime="20250214 15:24:16.600" endtime="20250214 15:24:16.600"/>
</kw>
<status status="PASS" starttime="20250214 15:24:16.582" endtime="20250214 15:24:16.600"/>
</iter>
<status status="PASS" starttime="20250214 15:24:16.581" endtime="20250214 15:24:16.600"/>
</for>
<status status="PASS" starttime="20250214 15:24:16.562" endtime="20250214 15:24:16.601"/>
</kw>
<kw name="E uma lista de usuários" library="listarUsuariosSteps">
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${Elemento_Lista_Dos_Usuarios}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250214 15:24:16.601" endtime="20250214 15:24:16.899"/>
</kw>
<kw name="transformar webelement em texto" library="listarUsuariosKeywords">
<var>${primeiro_elemento_lista}</var>
<arg>${Elemento_Lista_Dos_Usuarios}</arg>
<kw name="Get WebElement" library="SeleniumLibrary">
<var>${webelement}</var>
<arg>${webelement}</arg>
<doc>Returns the first WebElement matching the given ``locator``.</doc>
<msg timestamp="20250214 15:24:16.911" level="INFO">${webelement} = &lt;selenium.webdriver.remote.webelement.WebElement (session="79edbe897580647e387d6e724edf83f7", element="f.0C69D05D922D8ED5F92D37F60B28B413.d.738957D55C0FEE934706EA2F5E8E2CCA.e.56")&gt;</msg>
<status status="PASS" starttime="20250214 15:24:16.901" endtime="20250214 15:24:16.911"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${webelement}</var>
<arg>${webelement}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20250214 15:24:16.923" level="INFO">${webelement} = Christopher</msg>
<status status="PASS" starttime="20250214 15:24:16.912" endtime="20250214 15:24:16.923"/>
</kw>
<return>
<value>${webelement}</value>
<status status="PASS" starttime="20250214 15:24:16.923" endtime="20250214 15:24:16.924"/>
</return>
<msg timestamp="20250214 15:24:16.924" level="INFO">${primeiro_elemento_lista} = Christopher</msg>
<status status="PASS" starttime="20250214 15:24:16.900" endtime="20250214 15:24:16.924"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${primeiro_elemento_lista}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20250214 15:24:16.925" level="INFO">Length is 11</msg>
<status status="PASS" starttime="20250214 15:24:16.924" endtime="20250214 15:24:16.925"/>
</kw>
<status status="PASS" starttime="20250214 15:24:16.601" endtime="20250214 15:24:16.925"/>
</kw>
<kw name="Fechar Sessao" library="commons_web" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20250214 15:24:16.926" endtime="20250214 15:24:20.293"/>
</kw>
<status status="PASS" starttime="20250214 15:24:16.925" endtime="20250214 15:24:20.293"/>
</kw>
<status status="PASS" starttime="20250214 15:24:07.185" endtime="20250214 15:24:20.294"/>
</test>
<doc>Testes de Listar usuários</doc>
<status status="PASS" starttime="20250214 15:24:05.658" endtime="20250214 15:24:20.295"/>
</suite>
<suite id="s1-s2" name="loginTest" source="C:\Users\55619\Dropbox\My PC (DESKTOP-8Q92QEK)\Documents\projetos\servRest\automacao-com-robot-framework-api-web\WEB\tests\login\loginTest.robot">
<test id="s1-s2-t1" name="Cenário 01: Login com sucesso" line="9">
<kw name="gerar usuário para testes de login e abrir sessao" library="loginSteps" type="SETUP">
<kw name="gerar usuário para testes de login" library="commons_api">
<kw name="First Name" library="FakerLibrary">
<var>${nome_login}</var>
<msg timestamp="20250214 15:24:07.186" level="INFO">${nome_login} = John</msg>
<status status="PASS" starttime="20250214 15:24:07.185" endtime="20250214 15:24:07.186"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email_login}</var>
<msg timestamp="20250214 15:24:07.186" level="INFO">${email_login} = reyesmatthew@example.com</msg>
<status status="PASS" starttime="20250214 15:24:07.186" endtime="20250214 15:24:07.186"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha_login}</var>
<arg>special_chars=FALSE</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20250214 15:24:07.187" level="INFO">${senha_login} = DLEPcBhn5u</msg>
<status status="PASS" starttime="20250214 15:24:07.186" endtime="20250214 15:24:07.187"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250214 15:24:07.692" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20250214 15:24:07.187" endtime="20250214 15:24:07.692"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${email_login}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:07.694" level="INFO">${email_login} = reyesmatthew@example.com</msg>
<status status="PASS" starttime="20250214 15:24:07.693" endtime="20250214 15:24:07.694"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${senha_login}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:07.696" level="INFO">${senha_login} = DLEPcBhn5u</msg>
<status status="PASS" starttime="20250214 15:24:07.695" endtime="20250214 15:24:07.696"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${nome_login}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:07.697" level="INFO">${nome_login} = John</msg>
<status status="PASS" starttime="20250214 15:24:07.696" endtime="20250214 15:24:07.697"/>
</kw>
<kw name="criar usuário" library="usuariosApiKeywords">
<arg>${nome_login}</arg>
<arg>${email_login}</arg>
<arg>${senha_login}</arg>
<arg>true</arg>
<kw name="Gerar payload para cadastro de cliente" library="usuariosApiKeywords">
<arg>${nome}</arg>
<arg>${email}</arg>
<arg>${senha}</arg>
<arg>${adm}</arg>
<kw name="Criar Payload Para Cadastro De Cliente" library="createPayloads">
<var>${body}</var>
<arg>${NOME}</arg>
<arg>${EMAIL}</arg>
<arg>${SENHA}</arg>
<arg>${ADM}</arg>
<msg timestamp="20250214 15:24:07.700" level="INFO">${body} = {
    "nome": "John",
    "email": "reyesmatthew@example.com",
    "password": "DLEPcBhn5u",
    "administrador": "true"
}</msg>
<status status="PASS" starttime="20250214 15:24:07.699" endtime="20250214 15:24:07.700"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${body}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:07.701" level="INFO">${body} = {
    "nome": "John",
    "email": "reyesmatthew@example.com",
    "password": "DLEPcBhn5u",
    "administrador": "true"
}</msg>
<status status="PASS" starttime="20250214 15:24:07.700" endtime="20250214 15:24:07.701"/>
</kw>
<status status="PASS" starttime="20250214 15:24:07.698" endtime="20250214 15:24:07.701"/>
</kw>
<kw name="POST request test" library="commons_api">
<arg>/usuarios</arg>
<arg>${body}</arg>
<arg>201</arg>
<kw name="criar sessao" library="commons_api">
<kw name="Create Session" library="RequestsLibrary">
<arg>api</arg>
<arg>${BASE_URL_API}</arg>
<arg>verify=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20250214 15:24:07.704" level="INFO">Creating Session using : alias=api, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20250214 15:24:07.703" endtime="20250214 15:24:07.704"/>
</kw>
<status status="PASS" starttime="20250214 15:24:07.702" endtime="20250214 15:24:07.704"/>
</kw>
<kw name="Convert To Json" library="JsonValidator">
<var>${body}</var>
<arg>${body}</arg>
<doc>Convert a python object to JsonType.</doc>
<msg timestamp="20250214 15:24:07.705" level="INFO">${body} = {'nome': 'John', 'email': 'reyesmatthew@example.com', 'password': 'DLEPcBhn5u', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20250214 15:24:07.705" endtime="20250214 15:24:07.705"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20250214 15:24:07.706" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" starttime="20250214 15:24:07.705" endtime="20250214 15:24:07.706"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>api</arg>
<arg>url=${url}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=${status}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20250214 15:24:08.081" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '104'} 
 body=b'{"nome": "John", "email": "reyesmatthew@example.com", "password": "DLEPcBhn5u", "administrador": "true"}' 
 </msg>
<msg timestamp="20250214 15:24:08.081" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'e2872189d1726387668e3e2c843894d4', 'Date': 'Fri, 14 Feb 2025 18:24:07 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "Ij32Jw3WpltffAid"
} 
 </msg>
<msg timestamp="20250214 15:24:08.081" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20250214 15:24:07.706" endtime="20250214 15:24:08.082"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resposta}</var>
<arg>${response.content}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:24:08.084" level="INFO">${resposta} = {
    "message": "Cadastro realizado com sucesso",
    "_id": "Ij32Jw3WpltffAid"
}</msg>
<status status="PASS" starttime="20250214 15:24:08.082" endtime="20250214 15:24:08.084"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resposta_status}</var>
<arg>${response.status_code}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:24:08.086" level="INFO">${resposta_status} = 201</msg>
<status status="PASS" starttime="20250214 15:24:08.084" endtime="20250214 15:24:08.086"/>
</kw>
<kw name="To Json" library="RequestsLibrary">
<var>${resposta}</var>
<arg>${resposta}</arg>
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<msg timestamp="20250214 15:24:08.087" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20250214 15:24:08.087" level="INFO">To JSON using : content={
    "message": "Cadastro realizado com sucesso",
    "_id": "Ij32Jw3WpltffAid"
} </msg>
<msg timestamp="20250214 15:24:08.087" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20250214 15:24:08.087" level="INFO">${resposta} = {'message': 'Cadastro realizado com sucesso', '_id': 'Ij32Jw3WpltffAid'}</msg>
<status status="PASS" starttime="20250214 15:24:08.086" endtime="20250214 15:24:08.087"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${resposta}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:08.089" level="INFO">${resposta} = {'message': 'Cadastro realizado com sucesso', '_id': 'Ij32Jw3WpltffAid'}</msg>
<status status="PASS" starttime="20250214 15:24:08.088" endtime="20250214 15:24:08.089"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${resposta_status}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:08.090" level="INFO">${resposta_status} = 201</msg>
<status status="PASS" starttime="20250214 15:24:08.089" endtime="20250214 15:24:08.090"/>
</kw>
<status status="PASS" starttime="20250214 15:24:07.702" endtime="20250214 15:24:08.090"/>
</kw>
<status status="PASS" starttime="20250214 15:24:07.697" endtime="20250214 15:24:08.090"/>
</kw>
<status status="PASS" starttime="20250214 15:24:07.185" endtime="20250214 15:24:08.090"/>
</kw>
<kw name="Abrir Sessao" library="commons_web">
<kw name="Baixar Chromedriver Path" library="webdriverManager">
<var>${CHROMEDRIVER_PATH}</var>
<msg timestamp="20250214 15:24:08.092" level="INFO">====== WebDriver manager ======</msg>
<msg timestamp="20250214 15:24:09.731" level="INFO">Get LATEST chromedriver version for google-chrome</msg>
<msg timestamp="20250214 15:24:09.814" level="INFO">Get LATEST chromedriver version for google-chrome</msg>
<msg timestamp="20250214 15:24:09.901" level="INFO">Driver [C:\Users\55619\.wdm\drivers\chromedriver\win64\133.0.6943.98\chromedriver.exe] found in cache</msg>
<msg timestamp="20250214 15:24:09.901" level="INFO">C:\Users\55619\.wdm\drivers\chromedriver\win64\133.0.6943.98\chromedriver.exe</msg>
<msg timestamp="20250214 15:24:09.902" level="INFO">${CHROMEDRIVER_PATH} = C:\Users\55619\.wdm\drivers\chromedriver\win64\133.0.6943.98\chromedriver.exe</msg>
<status status="PASS" starttime="20250214 15:24:08.092" endtime="20250214 15:24:09.902"/>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${BASE_URL}</arg>
<arg>${BROWSER}</arg>
<arg>executable_path=${CHROMEDRIVER_PATH}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20250214 15:24:09.903" level="INFO">Opening browser 'Chrome' to base url 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20250214 15:24:09.902" endtime="20250214 15:24:13.301"/>
</kw>
<status status="PASS" starttime="20250214 15:24:08.091" endtime="20250214 15:24:13.301"/>
</kw>
<status status="PASS" starttime="20250214 15:24:07.184" endtime="20250214 15:24:13.302"/>
</kw>
<kw name="Dado que eu tenha acessado o sistema serverest" library="loginSteps">
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${BOTAO_ENTRAR}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250214 15:24:13.304" endtime="20250214 15:24:13.330"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20250214 15:24:14.217" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="1-selenium-screenshot-1.png"&gt;&lt;img src="1-selenium-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20250214 15:24:13.331" endtime="20250214 15:24:14.218"/>
</kw>
<status status="PASS" starttime="20250214 15:24:13.302" endtime="20250214 15:24:14.218"/>
</kw>
<kw name="Quando preencher usuário &quot;${email_login}&quot; e Senha &quot;${senha_login}&quot;" library="loginSteps" sourcename="Quando preencher usuário &quot;${NOME_LOGIN}&quot; e Senha &quot;${SENHA_LOGIN}&quot;">
<kw name="aguardar elemento estar visivel na tela e preencher" library="loginKeywords">
<arg>${Input_Email_Login}</arg>
<arg>${NOME_LOGIN}</arg>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${elemento_aguardado}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250214 15:24:14.221" endtime="20250214 15:24:14.240"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${elemento_aguardado}</arg>
<arg>${elemento_a_ser_preenchido}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250214 15:24:14.242" level="INFO">Typing text 'reyesmatthew@example.com' into text field 'id=email'.</msg>
<status status="PASS" starttime="20250214 15:24:14.241" endtime="20250214 15:24:14.466"/>
</kw>
<status status="PASS" starttime="20250214 15:24:14.219" endtime="20250214 15:24:14.466"/>
</kw>
<kw name="aguardar elemento estar visivel na tela e preencher" library="loginKeywords">
<arg>${Input_Senha_Login}</arg>
<arg>${SENHA_LOGIN}</arg>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${elemento_aguardado}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250214 15:24:14.469" endtime="20250214 15:24:14.486"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${elemento_aguardado}</arg>
<arg>${elemento_a_ser_preenchido}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250214 15:24:14.487" level="INFO">Typing text 'DLEPcBhn5u' into text field 'id=password'.</msg>
<status status="PASS" starttime="20250214 15:24:14.486" endtime="20250214 15:24:14.638"/>
</kw>
<status status="PASS" starttime="20250214 15:24:14.467" endtime="20250214 15:24:14.638"/>
</kw>
<status status="PASS" starttime="20250214 15:24:14.219" endtime="20250214 15:24:14.639"/>
</kw>
<kw name="E clicar em &quot;Entrar&quot;" library="commons_web" sourcename="${word} clicar em &quot;${btn}&quot;">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Botao_${btn}}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250214 15:24:14.641" level="INFO">Clicking element '//button[@type="submit"]'.</msg>
<status status="PASS" starttime="20250214 15:24:14.640" endtime="20250214 15:24:14.753"/>
</kw>
<status status="PASS" starttime="20250214 15:24:14.640" endtime="20250214 15:24:14.753"/>
</kw>
<kw name="Então sistema efetuará o &quot;login&quot; com sucesso ao mostrar o texto &quot;${Texto_bem_vindo}&quot;" library="loginSteps" sourcename="Então sistema efetuará o &quot;${login}&quot; com sucesso ao mostrar o texto &quot;${Texto}&quot;">
<kw name="aguardar texto: &quot;${Texto}&quot; estar visivel e printar a tela" library="commons_web" sourcename="aguardar texto: &quot;${Texto}&quot; estar visivel e printar a tela">
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Texto}</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20250214 15:24:14.755" endtime="20250214 15:24:15.873"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20250214 15:24:15.992" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="1-selenium-screenshot-2.png"&gt;&lt;img src="1-selenium-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20250214 15:24:15.874" endtime="20250214 15:24:15.992"/>
</kw>
<status status="PASS" starttime="20250214 15:24:14.755" endtime="20250214 15:24:15.992"/>
</kw>
<status status="PASS" starttime="20250214 15:24:14.754" endtime="20250214 15:24:15.993"/>
</kw>
<kw name="Fechar Sessao" library="commons_web" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20250214 15:24:15.995" endtime="20250214 15:24:18.223"/>
</kw>
<status status="PASS" starttime="20250214 15:24:15.993" endtime="20250214 15:24:18.224"/>
</kw>
<status status="PASS" starttime="20250214 15:24:07.183" endtime="20250214 15:24:18.224"/>
</test>
<test id="s1-s2-t2" name="Cenário 02: Logout com sucesso" line="16">
<kw name="gerar usuário para testes de login e abrir sessao" library="loginSteps" type="SETUP">
<kw name="gerar usuário para testes de login" library="commons_api">
<kw name="First Name" library="FakerLibrary">
<var>${nome_login}</var>
<msg timestamp="20250214 15:24:18.232" level="INFO">${nome_login} = Daniel</msg>
<status status="PASS" starttime="20250214 15:24:18.231" endtime="20250214 15:24:18.232"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email_login}</var>
<msg timestamp="20250214 15:24:18.233" level="INFO">${email_login} = jameshuff@example.com</msg>
<status status="PASS" starttime="20250214 15:24:18.232" endtime="20250214 15:24:18.233"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha_login}</var>
<arg>special_chars=FALSE</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20250214 15:24:18.234" level="INFO">${senha_login} = Mg9MHhWDOX</msg>
<status status="PASS" starttime="20250214 15:24:18.234" endtime="20250214 15:24:18.234"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250214 15:24:18.750" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20250214 15:24:18.234" endtime="20250214 15:24:18.750"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${email_login}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:18.751" level="INFO">${email_login} = jameshuff@example.com</msg>
<status status="PASS" starttime="20250214 15:24:18.750" endtime="20250214 15:24:18.751"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${senha_login}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:18.752" level="INFO">${senha_login} = Mg9MHhWDOX</msg>
<status status="PASS" starttime="20250214 15:24:18.751" endtime="20250214 15:24:18.752"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${nome_login}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:18.752" level="INFO">${nome_login} = Daniel</msg>
<status status="PASS" starttime="20250214 15:24:18.752" endtime="20250214 15:24:18.752"/>
</kw>
<kw name="criar usuário" library="usuariosApiKeywords">
<arg>${nome_login}</arg>
<arg>${email_login}</arg>
<arg>${senha_login}</arg>
<arg>true</arg>
<kw name="Gerar payload para cadastro de cliente" library="usuariosApiKeywords">
<arg>${nome}</arg>
<arg>${email}</arg>
<arg>${senha}</arg>
<arg>${adm}</arg>
<kw name="Criar Payload Para Cadastro De Cliente" library="createPayloads">
<var>${body}</var>
<arg>${NOME}</arg>
<arg>${EMAIL}</arg>
<arg>${SENHA}</arg>
<arg>${ADM}</arg>
<msg timestamp="20250214 15:24:18.755" level="INFO">${body} = {
    "nome": "Daniel",
    "email": "jameshuff@example.com",
    "password": "Mg9MHhWDOX",
    "administrador": "true"
}</msg>
<status status="PASS" starttime="20250214 15:24:18.754" endtime="20250214 15:24:18.755"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${body}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:18.755" level="INFO">${body} = {
    "nome": "Daniel",
    "email": "jameshuff@example.com",
    "password": "Mg9MHhWDOX",
    "administrador": "true"
}</msg>
<status status="PASS" starttime="20250214 15:24:18.755" endtime="20250214 15:24:18.755"/>
</kw>
<status status="PASS" starttime="20250214 15:24:18.753" endtime="20250214 15:24:18.756"/>
</kw>
<kw name="POST request test" library="commons_api">
<arg>/usuarios</arg>
<arg>${body}</arg>
<arg>201</arg>
<kw name="criar sessao" library="commons_api">
<kw name="Create Session" library="RequestsLibrary">
<arg>api</arg>
<arg>${BASE_URL_API}</arg>
<arg>verify=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20250214 15:24:18.758" level="INFO">Creating Session using : alias=api, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20250214 15:24:18.757" endtime="20250214 15:24:18.758"/>
</kw>
<status status="PASS" starttime="20250214 15:24:18.756" endtime="20250214 15:24:18.758"/>
</kw>
<kw name="Convert To Json" library="JsonValidator">
<var>${body}</var>
<arg>${body}</arg>
<doc>Convert a python object to JsonType.</doc>
<msg timestamp="20250214 15:24:18.759" level="INFO">${body} = {'nome': 'Daniel', 'email': 'jameshuff@example.com', 'password': 'Mg9MHhWDOX', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20250214 15:24:18.758" endtime="20250214 15:24:18.759"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20250214 15:24:18.760" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" starttime="20250214 15:24:18.759" endtime="20250214 15:24:18.760"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>api</arg>
<arg>url=${url}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=${status}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20250214 15:24:19.132" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '103'} 
 body=b'{"nome": "Daniel", "email": "jameshuff@example.com", "password": "Mg9MHhWDOX", "administrador": "true"}' 
 </msg>
<msg timestamp="20250214 15:24:19.132" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '00503808722fe42e827883a8e57334e6;o=1', 'Date': 'Fri, 14 Feb 2025 18:24:19 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "c7FE9IMlt1PltCi6"
} 
 </msg>
<msg timestamp="20250214 15:24:19.132" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20250214 15:24:18.760" endtime="20250214 15:24:19.132"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resposta}</var>
<arg>${response.content}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:24:19.134" level="INFO">${resposta} = {
    "message": "Cadastro realizado com sucesso",
    "_id": "c7FE9IMlt1PltCi6"
}</msg>
<status status="PASS" starttime="20250214 15:24:19.132" endtime="20250214 15:24:19.134"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resposta_status}</var>
<arg>${response.status_code}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:24:19.135" level="INFO">${resposta_status} = 201</msg>
<status status="PASS" starttime="20250214 15:24:19.134" endtime="20250214 15:24:19.135"/>
</kw>
<kw name="To Json" library="RequestsLibrary">
<var>${resposta}</var>
<arg>${resposta}</arg>
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<msg timestamp="20250214 15:24:19.135" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20250214 15:24:19.136" level="INFO">To JSON using : content={
    "message": "Cadastro realizado com sucesso",
    "_id": "c7FE9IMlt1PltCi6"
} </msg>
<msg timestamp="20250214 15:24:19.136" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20250214 15:24:19.136" level="INFO">${resposta} = {'message': 'Cadastro realizado com sucesso', '_id': 'c7FE9IMlt1PltCi6'}</msg>
<status status="PASS" starttime="20250214 15:24:19.135" endtime="20250214 15:24:19.136"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${resposta}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:19.137" level="INFO">${resposta} = {'message': 'Cadastro realizado com sucesso', '_id': 'c7FE9IMlt1PltCi6'}</msg>
<status status="PASS" starttime="20250214 15:24:19.136" endtime="20250214 15:24:19.137"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${resposta_status}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:19.138" level="INFO">${resposta_status} = 201</msg>
<status status="PASS" starttime="20250214 15:24:19.137" endtime="20250214 15:24:19.138"/>
</kw>
<status status="PASS" starttime="20250214 15:24:18.756" endtime="20250214 15:24:19.139"/>
</kw>
<status status="PASS" starttime="20250214 15:24:18.753" endtime="20250214 15:24:19.139"/>
</kw>
<status status="PASS" starttime="20250214 15:24:18.230" endtime="20250214 15:24:19.140"/>
</kw>
<kw name="Abrir Sessao" library="commons_web">
<kw name="Baixar Chromedriver Path" library="webdriverManager">
<var>${CHROMEDRIVER_PATH}</var>
<msg timestamp="20250214 15:24:19.142" level="INFO">====== WebDriver manager ======</msg>
<msg timestamp="20250214 15:24:21.055" level="INFO">Get LATEST chromedriver version for google-chrome</msg>
<msg timestamp="20250214 15:24:21.131" level="INFO">Get LATEST chromedriver version for google-chrome</msg>
<msg timestamp="20250214 15:24:21.212" level="INFO">Driver [C:\Users\55619\.wdm\drivers\chromedriver\win64\133.0.6943.98\chromedriver.exe] found in cache</msg>
<msg timestamp="20250214 15:24:21.212" level="INFO">C:\Users\55619\.wdm\drivers\chromedriver\win64\133.0.6943.98\chromedriver.exe</msg>
<msg timestamp="20250214 15:24:21.212" level="INFO">${CHROMEDRIVER_PATH} = C:\Users\55619\.wdm\drivers\chromedriver\win64\133.0.6943.98\chromedriver.exe</msg>
<status status="PASS" starttime="20250214 15:24:19.142" endtime="20250214 15:24:21.212"/>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${BASE_URL}</arg>
<arg>${BROWSER}</arg>
<arg>executable_path=${CHROMEDRIVER_PATH}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20250214 15:24:21.214" level="INFO">Opening browser 'Chrome' to base url 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20250214 15:24:21.213" endtime="20250214 15:24:24.728"/>
</kw>
<status status="PASS" starttime="20250214 15:24:19.140" endtime="20250214 15:24:24.729"/>
</kw>
<status status="PASS" starttime="20250214 15:24:18.230" endtime="20250214 15:24:24.729"/>
</kw>
<kw name="Dado que eu tenha realizado login" library="loginSteps">
<arg>${email_login}</arg>
<arg>${senha_login}</arg>
<kw name="Dado que eu tenha acessado o sistema serverest" library="loginSteps">
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${BOTAO_ENTRAR}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250214 15:24:24.736" endtime="20250214 15:24:24.765"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20250214 15:24:25.443" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="1-selenium-screenshot-3.png"&gt;&lt;img src="1-selenium-screenshot-3.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20250214 15:24:24.766" endtime="20250214 15:24:25.443"/>
</kw>
<status status="PASS" starttime="20250214 15:24:24.733" endtime="20250214 15:24:25.443"/>
</kw>
<kw name="Quando preencher usuário &quot;${NOME_LOGIN}&quot; e Senha &quot;${SENHA_LOGIN}&quot;" library="loginSteps" sourcename="Quando preencher usuário &quot;${NOME_LOGIN}&quot; e Senha &quot;${SENHA_LOGIN}&quot;">
<kw name="aguardar elemento estar visivel na tela e preencher" library="loginKeywords">
<arg>${Input_Email_Login}</arg>
<arg>${NOME_LOGIN}</arg>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${elemento_aguardado}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250214 15:24:25.446" endtime="20250214 15:24:25.459"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${elemento_aguardado}</arg>
<arg>${elemento_a_ser_preenchido}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250214 15:24:25.460" level="INFO">Typing text 'jameshuff@example.com' into text field 'id=email'.</msg>
<status status="PASS" starttime="20250214 15:24:25.459" endtime="20250214 15:24:25.608"/>
</kw>
<status status="PASS" starttime="20250214 15:24:25.445" endtime="20250214 15:24:25.608"/>
</kw>
<kw name="aguardar elemento estar visivel na tela e preencher" library="loginKeywords">
<arg>${Input_Senha_Login}</arg>
<arg>${SENHA_LOGIN}</arg>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${elemento_aguardado}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250214 15:24:25.610" endtime="20250214 15:24:25.621"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${elemento_aguardado}</arg>
<arg>${elemento_a_ser_preenchido}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250214 15:24:25.622" level="INFO">Typing text 'Mg9MHhWDOX' into text field 'id=password'.</msg>
<status status="PASS" starttime="20250214 15:24:25.621" endtime="20250214 15:24:25.817"/>
</kw>
<status status="PASS" starttime="20250214 15:24:25.609" endtime="20250214 15:24:25.817"/>
</kw>
<status status="PASS" starttime="20250214 15:24:25.444" endtime="20250214 15:24:25.818"/>
</kw>
<kw name="E clicar em &quot;Entrar&quot;" library="commons_web" sourcename="${word} clicar em &quot;${btn}&quot;">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Botao_${btn}}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250214 15:24:25.821" level="INFO">Clicking element '//button[@type="submit"]'.</msg>
<status status="PASS" starttime="20250214 15:24:25.820" endtime="20250214 15:24:25.911"/>
</kw>
<status status="PASS" starttime="20250214 15:24:25.818" endtime="20250214 15:24:25.912"/>
</kw>
<kw name="Então sistema efetuará o &quot;login&quot; com sucesso ao mostrar o texto &quot;${Texto_bem_vindo}&quot;" library="loginSteps" sourcename="Então sistema efetuará o &quot;${login}&quot; com sucesso ao mostrar o texto &quot;${Texto}&quot;">
<kw name="aguardar texto: &quot;${Texto}&quot; estar visivel e printar a tela" library="commons_web" sourcename="aguardar texto: &quot;${Texto}&quot; estar visivel e printar a tela">
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Texto}</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20250214 15:24:25.915" endtime="20250214 15:24:27.038"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20250214 15:24:27.167" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="1-selenium-screenshot-4.png"&gt;&lt;img src="1-selenium-screenshot-4.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20250214 15:24:27.038" endtime="20250214 15:24:27.168"/>
</kw>
<status status="PASS" starttime="20250214 15:24:25.914" endtime="20250214 15:24:27.168"/>
</kw>
<status status="PASS" starttime="20250214 15:24:25.913" endtime="20250214 15:24:27.169"/>
</kw>
<status status="PASS" starttime="20250214 15:24:24.730" endtime="20250214 15:24:27.169"/>
</kw>
<kw name="Quando clicar em &quot;Logout&quot;" library="commons_web" sourcename="${word} clicar em &quot;${btn}&quot;">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Botao_${btn}}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250214 15:24:27.172" level="INFO">Clicking element '//button[@data-testid="logout"]'.</msg>
<status status="PASS" starttime="20250214 15:24:27.171" endtime="20250214 15:24:27.327"/>
</kw>
<status status="PASS" starttime="20250214 15:24:27.169" endtime="20250214 15:24:27.328"/>
</kw>
<kw name="Então sistema efetuará o &quot;logout&quot; com sucesso ao mostrar o texto &quot;${Texto_Logout}&quot;" library="loginSteps" sourcename="Então sistema efetuará o &quot;${login}&quot; com sucesso ao mostrar o texto &quot;${Texto}&quot;">
<kw name="aguardar texto: &quot;${Texto}&quot; estar visivel e printar a tela" library="commons_web" sourcename="aguardar texto: &quot;${Texto}&quot; estar visivel e printar a tela">
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Texto}</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20250214 15:24:27.331" endtime="20250214 15:24:27.350"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20250214 15:24:27.607" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="1-selenium-screenshot-5.png"&gt;&lt;img src="1-selenium-screenshot-5.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20250214 15:24:27.350" endtime="20250214 15:24:27.607"/>
</kw>
<status status="PASS" starttime="20250214 15:24:27.329" endtime="20250214 15:24:27.607"/>
</kw>
<status status="PASS" starttime="20250214 15:24:27.328" endtime="20250214 15:24:27.607"/>
</kw>
<kw name="Fechar Sessao" library="commons_web" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20250214 15:24:27.608" endtime="20250214 15:24:29.907"/>
</kw>
<status status="PASS" starttime="20250214 15:24:27.608" endtime="20250214 15:24:29.907"/>
</kw>
<status status="PASS" starttime="20250214 15:24:18.225" endtime="20250214 15:24:29.907"/>
</test>
<test id="s1-s2-t3" name="Cenário 03: Login com senha errada" line="22">
<kw name="Abrir Sessao" library="commons_web" type="SETUP">
<kw name="Baixar Chromedriver Path" library="webdriverManager">
<var>${CHROMEDRIVER_PATH}</var>
<msg timestamp="20250214 15:24:29.909" level="INFO">====== WebDriver manager ======</msg>
<msg timestamp="20250214 15:24:31.395" level="INFO">Get LATEST chromedriver version for google-chrome</msg>
<msg timestamp="20250214 15:24:31.479" level="INFO">Get LATEST chromedriver version for google-chrome</msg>
<msg timestamp="20250214 15:24:31.554" level="INFO">Driver [C:\Users\55619\.wdm\drivers\chromedriver\win64\133.0.6943.98\chromedriver.exe] found in cache</msg>
<msg timestamp="20250214 15:24:31.555" level="INFO">C:\Users\55619\.wdm\drivers\chromedriver\win64\133.0.6943.98\chromedriver.exe</msg>
<msg timestamp="20250214 15:24:31.555" level="INFO">${CHROMEDRIVER_PATH} = C:\Users\55619\.wdm\drivers\chromedriver\win64\133.0.6943.98\chromedriver.exe</msg>
<status status="PASS" starttime="20250214 15:24:29.909" endtime="20250214 15:24:31.555"/>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${BASE_URL}</arg>
<arg>${BROWSER}</arg>
<arg>executable_path=${CHROMEDRIVER_PATH}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20250214 15:24:31.556" level="INFO">Opening browser 'Chrome' to base url 'https://front.serverest.dev/login'.</msg>
<status status="PASS" starttime="20250214 15:24:31.555" endtime="20250214 15:24:34.715"/>
</kw>
<status status="PASS" starttime="20250214 15:24:29.908" endtime="20250214 15:24:34.715"/>
</kw>
<kw name="Dado que eu tenha acessado o sistema serverest" library="loginSteps">
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${BOTAO_ENTRAR}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250214 15:24:34.717" endtime="20250214 15:24:34.735"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20250214 15:24:35.272" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="1-selenium-screenshot-6.png"&gt;&lt;img src="1-selenium-screenshot-6.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20250214 15:24:34.736" endtime="20250214 15:24:35.272"/>
</kw>
<status status="PASS" starttime="20250214 15:24:34.716" endtime="20250214 15:24:35.272"/>
</kw>
<kw name="Quando preencher usuário &quot;${NOME}&quot; e Senha &quot;1234&quot;" library="loginSteps" sourcename="Quando preencher usuário &quot;${NOME_LOGIN}&quot; e Senha &quot;${SENHA_LOGIN}&quot;">
<kw name="aguardar elemento estar visivel na tela e preencher" library="loginKeywords">
<arg>${Input_Email_Login}</arg>
<arg>${NOME_LOGIN}</arg>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${elemento_aguardado}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250214 15:24:35.274" endtime="20250214 15:24:35.286"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${elemento_aguardado}</arg>
<arg>${elemento_a_ser_preenchido}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250214 15:24:35.287" level="INFO">Typing text 'felipe@gmail.com.br' into text field 'id=email'.</msg>
<status status="PASS" starttime="20250214 15:24:35.286" endtime="20250214 15:24:35.425"/>
</kw>
<status status="PASS" starttime="20250214 15:24:35.273" endtime="20250214 15:24:35.425"/>
</kw>
<kw name="aguardar elemento estar visivel na tela e preencher" library="loginKeywords">
<arg>${Input_Senha_Login}</arg>
<arg>${SENHA_LOGIN}</arg>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${elemento_aguardado}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20250214 15:24:35.426" endtime="20250214 15:24:35.441"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${elemento_aguardado}</arg>
<arg>${elemento_a_ser_preenchido}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20250214 15:24:35.442" level="INFO">Typing text '1234' into text field 'id=password'.</msg>
<status status="PASS" starttime="20250214 15:24:35.441" endtime="20250214 15:24:35.615"/>
</kw>
<status status="PASS" starttime="20250214 15:24:35.426" endtime="20250214 15:24:35.615"/>
</kw>
<status status="PASS" starttime="20250214 15:24:35.273" endtime="20250214 15:24:35.616"/>
</kw>
<kw name="E clicar em &quot;Entrar&quot;" library="commons_web" sourcename="${word} clicar em &quot;${btn}&quot;">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${Botao_${btn}}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20250214 15:24:35.617" level="INFO">Clicking element '//button[@type="submit"]'.</msg>
<status status="PASS" starttime="20250214 15:24:35.616" endtime="20250214 15:24:35.693"/>
</kw>
<status status="PASS" starttime="20250214 15:24:35.616" endtime="20250214 15:24:35.693"/>
</kw>
<kw name="Então sistema não efeturá login e apresentará o texto &quot;${Texto_Logout}&quot;" library="loginSteps" sourcename="Então sistema não efeturá login e apresentará o texto &quot;${Texto}&quot;">
<kw name="aguardar texto: &quot;${Texto}&quot; estar visivel e printar a tela" library="commons_web" sourcename="aguardar texto: &quot;${Texto}&quot; estar visivel e printar a tela">
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>${Texto}</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20250214 15:24:35.695" endtime="20250214 15:24:35.707"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20250214 15:24:35.942" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="1-selenium-screenshot-7.png"&gt;&lt;img src="1-selenium-screenshot-7.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20250214 15:24:35.708" endtime="20250214 15:24:35.943"/>
</kw>
<status status="PASS" starttime="20250214 15:24:35.694" endtime="20250214 15:24:35.943"/>
</kw>
<status status="PASS" starttime="20250214 15:24:35.694" endtime="20250214 15:24:35.943"/>
</kw>
<kw name="Fechar Sessao" library="commons_web" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20250214 15:24:35.944" endtime="20250214 15:24:38.180"/>
</kw>
<status status="PASS" starttime="20250214 15:24:35.944" endtime="20250214 15:24:38.180"/>
</kw>
<status status="PASS" starttime="20250214 15:24:29.908" endtime="20250214 15:24:38.181"/>
</test>
<doc>Testes de login e logout</doc>
<status status="PASS" starttime="20250214 15:24:05.667" endtime="20250214 15:24:38.182"/>
</suite>
<suite id="s1-s3" name="loginApiTest" source="C:\Users\55619\Dropbox\My PC (DESKTOP-8Q92QEK)\Documents\projetos\servRest\automacao-com-robot-framework-api-web\API\tests\login\loginApiTest.robot">
<test id="s1-s3-t1" name="Cenário 01: Login com sucesso" line="8">
<kw name="gerar usuário para testes de login" library="commons_api" type="SETUP">
<kw name="First Name" library="FakerLibrary">
<var>${nome_login}</var>
<msg timestamp="20250214 15:24:07.003" level="INFO">${nome_login} = Bobby</msg>
<status status="PASS" starttime="20250214 15:24:07.003" endtime="20250214 15:24:07.003"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email_login}</var>
<msg timestamp="20250214 15:24:07.004" level="INFO">${email_login} = jennifer83@example.net</msg>
<status status="PASS" starttime="20250214 15:24:07.003" endtime="20250214 15:24:07.004"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha_login}</var>
<arg>special_chars=FALSE</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20250214 15:24:07.004" level="INFO">${senha_login} = ZUNqtMjv6L</msg>
<status status="PASS" starttime="20250214 15:24:07.004" endtime="20250214 15:24:07.005"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250214 15:24:07.519" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20250214 15:24:07.005" endtime="20250214 15:24:07.519"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${email_login}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:07.521" level="INFO">${email_login} = jennifer83@example.net</msg>
<status status="PASS" starttime="20250214 15:24:07.520" endtime="20250214 15:24:07.521"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${senha_login}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:07.522" level="INFO">${senha_login} = ZUNqtMjv6L</msg>
<status status="PASS" starttime="20250214 15:24:07.521" endtime="20250214 15:24:07.522"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${nome_login}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:07.524" level="INFO">${nome_login} = Bobby</msg>
<status status="PASS" starttime="20250214 15:24:07.523" endtime="20250214 15:24:07.524"/>
</kw>
<kw name="criar usuário" library="usuariosApiKeywords">
<arg>${nome_login}</arg>
<arg>${email_login}</arg>
<arg>${senha_login}</arg>
<arg>true</arg>
<kw name="Gerar payload para cadastro de cliente" library="usuariosApiKeywords">
<arg>${nome}</arg>
<arg>${email}</arg>
<arg>${senha}</arg>
<arg>${adm}</arg>
<kw name="Criar Payload Para Cadastro De Cliente" library="createPayloads">
<var>${body}</var>
<arg>${NOME}</arg>
<arg>${EMAIL}</arg>
<arg>${SENHA}</arg>
<arg>${ADM}</arg>
<msg timestamp="20250214 15:24:07.528" level="INFO">${body} = {
    "nome": "Bobby",
    "email": "jennifer83@example.net",
    "password": "ZUNqtMjv6L",
    "administrador": "true"
}</msg>
<status status="PASS" starttime="20250214 15:24:07.527" endtime="20250214 15:24:07.528"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${body}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:07.530" level="INFO">${body} = {
    "nome": "Bobby",
    "email": "jennifer83@example.net",
    "password": "ZUNqtMjv6L",
    "administrador": "true"
}</msg>
<status status="PASS" starttime="20250214 15:24:07.529" endtime="20250214 15:24:07.530"/>
</kw>
<status status="PASS" starttime="20250214 15:24:07.525" endtime="20250214 15:24:07.530"/>
</kw>
<kw name="POST request test" library="commons_api">
<arg>/usuarios</arg>
<arg>${body}</arg>
<arg>201</arg>
<kw name="criar sessao" library="commons_api">
<kw name="Create Session" library="RequestsLibrary">
<arg>api</arg>
<arg>${BASE_URL_API}</arg>
<arg>verify=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20250214 15:24:07.534" level="INFO">Creating Session using : alias=api, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20250214 15:24:07.533" endtime="20250214 15:24:07.534"/>
</kw>
<status status="PASS" starttime="20250214 15:24:07.532" endtime="20250214 15:24:07.535"/>
</kw>
<kw name="Convert To Json" library="JsonValidator">
<var>${body}</var>
<arg>${body}</arg>
<doc>Convert a python object to JsonType.</doc>
<msg timestamp="20250214 15:24:07.536" level="INFO">${body} = {'nome': 'Bobby', 'email': 'jennifer83@example.net', 'password': 'ZUNqtMjv6L', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20250214 15:24:07.535" endtime="20250214 15:24:07.537"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20250214 15:24:07.538" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" starttime="20250214 15:24:07.537" endtime="20250214 15:24:07.538"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>api</arg>
<arg>url=${url}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=${status}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20250214 15:24:07.935" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '103'} 
 body=b'{"nome": "Bobby", "email": "jennifer83@example.net", "password": "ZUNqtMjv6L", "administrador": "true"}' 
 </msg>
<msg timestamp="20250214 15:24:07.935" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'cafd55feb7a8a527f6bfe4dbf1cd3af5', 'Date': 'Fri, 14 Feb 2025 18:24:07 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "ia5CmXC6FKXlOBri"
} 
 </msg>
<msg timestamp="20250214 15:24:07.935" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20250214 15:24:07.539" endtime="20250214 15:24:07.935"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resposta}</var>
<arg>${response.content}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:24:07.936" level="INFO">${resposta} = {
    "message": "Cadastro realizado com sucesso",
    "_id": "ia5CmXC6FKXlOBri"
}</msg>
<status status="PASS" starttime="20250214 15:24:07.935" endtime="20250214 15:24:07.936"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resposta_status}</var>
<arg>${response.status_code}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:24:07.937" level="INFO">${resposta_status} = 201</msg>
<status status="PASS" starttime="20250214 15:24:07.936" endtime="20250214 15:24:07.937"/>
</kw>
<kw name="To Json" library="RequestsLibrary">
<var>${resposta}</var>
<arg>${resposta}</arg>
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<msg timestamp="20250214 15:24:07.938" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20250214 15:24:07.938" level="INFO">To JSON using : content={
    "message": "Cadastro realizado com sucesso",
    "_id": "ia5CmXC6FKXlOBri"
} </msg>
<msg timestamp="20250214 15:24:07.938" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20250214 15:24:07.938" level="INFO">${resposta} = {'message': 'Cadastro realizado com sucesso', '_id': 'ia5CmXC6FKXlOBri'}</msg>
<status status="PASS" starttime="20250214 15:24:07.937" endtime="20250214 15:24:07.938"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${resposta}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:07.938" level="INFO">${resposta} = {'message': 'Cadastro realizado com sucesso', '_id': 'ia5CmXC6FKXlOBri'}</msg>
<status status="PASS" starttime="20250214 15:24:07.938" endtime="20250214 15:24:07.939"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${resposta_status}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:07.939" level="INFO">${resposta_status} = 201</msg>
<status status="PASS" starttime="20250214 15:24:07.939" endtime="20250214 15:24:07.939"/>
</kw>
<status status="PASS" starttime="20250214 15:24:07.531" endtime="20250214 15:24:07.939"/>
</kw>
<status status="PASS" starttime="20250214 15:24:07.524" endtime="20250214 15:24:07.939"/>
</kw>
<status status="PASS" starttime="20250214 15:24:07.002" endtime="20250214 15:24:07.940"/>
</kw>
<kw name="Quando acionar endpoint para efetuar login com usuário &quot;${email_login}&quot; e Senha &quot;${senha_login}&quot;" library="loginApiSteps" sourcename="Quando acionar endpoint para efetuar login com usuário &quot;${NOME}&quot; e Senha &quot;${SENHA}&quot;">
<kw name="efetuar login" library="loginApiKeywords">
<arg>${NOME}</arg>
<arg>${SENHA}</arg>
<arg>200</arg>
<kw name="Gerar payload para login" library="loginApiKeywords">
<arg>${EMAIL}</arg>
<arg>${SENHA}</arg>
<kw name="Criar Payload Para Gerar Token" library="createPayloads">
<var>${body}</var>
<arg>${EMAIL}</arg>
<arg>${SENHA}</arg>
<msg timestamp="20250214 15:24:07.942" level="INFO">${body} = {
    "email": "jennifer83@example.net",
    "password": "ZUNqtMjv6L"
}</msg>
<status status="PASS" starttime="20250214 15:24:07.941" endtime="20250214 15:24:07.942"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${body}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:07.942" level="INFO">${body} = {
    "email": "jennifer83@example.net",
    "password": "ZUNqtMjv6L"
}</msg>
<status status="PASS" starttime="20250214 15:24:07.942" endtime="20250214 15:24:07.942"/>
</kw>
<status status="PASS" starttime="20250214 15:24:07.941" endtime="20250214 15:24:07.942"/>
</kw>
<kw name="gerar token" library="commons_api">
<arg>${EMAIL}</arg>
<arg>${SENHA}</arg>
<arg>${STATUSCODE}</arg>
<kw name="POST request test" library="commons_api">
<arg>/login</arg>
<arg>${body}</arg>
<arg>${STATUSCODE}</arg>
<kw name="criar sessao" library="commons_api">
<kw name="Create Session" library="RequestsLibrary">
<arg>api</arg>
<arg>${BASE_URL_API}</arg>
<arg>verify=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20250214 15:24:07.945" level="INFO">Creating Session using : alias=api, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20250214 15:24:07.944" endtime="20250214 15:24:07.945"/>
</kw>
<status status="PASS" starttime="20250214 15:24:07.944" endtime="20250214 15:24:07.945"/>
</kw>
<kw name="Convert To Json" library="JsonValidator">
<var>${body}</var>
<arg>${body}</arg>
<doc>Convert a python object to JsonType.</doc>
<msg timestamp="20250214 15:24:07.946" level="INFO">${body} = {'email': 'jennifer83@example.net', 'password': 'ZUNqtMjv6L'}</msg>
<status status="PASS" starttime="20250214 15:24:07.945" endtime="20250214 15:24:07.946"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20250214 15:24:07.946" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" starttime="20250214 15:24:07.946" endtime="20250214 15:24:07.946"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>api</arg>
<arg>url=${url}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=${status}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20250214 15:24:08.306" level="INFO">POST Request : url=https://serverest.dev/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '61'} 
 body=b'{"email": "jennifer83@example.net", "password": "ZUNqtMjv6L"}' 
 </msg>
<msg timestamp="20250214 15:24:08.306" level="INFO">POST Response : url=https://serverest.dev/login 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '9ab0401a0a38f352fac989c68de9999e', 'Date': 'Fri, 14 Feb 2025 18:24:08 GMT', 'Server': 'Google Frontend', 'Content-Length': '284'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Implbm5pZmVyODNAZXhhbXBsZS5uZXQiLCJwYXNzd29yZCI6IlpVTnF0TWp2NkwiLCJpYXQiOjE3Mzk1NTc0NDgsImV4cCI6MTczOTU1ODA0OH0.fWqEoPfYFoL8VdQxJWG2T1l0smoocNNeynMhdVwxxeE"
} 
 </msg>
<msg timestamp="20250214 15:24:08.307" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20250214 15:24:07.946" endtime="20250214 15:24:08.307"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resposta}</var>
<arg>${response.content}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:24:08.308" level="INFO">${resposta} = {
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Implbm5pZmVyODNAZXhhbXBsZS5uZXQiLCJwYXNzd29yZCI6IlpVTnF0TWp2NkwiLCJpYXQiOj...</msg>
<status status="PASS" starttime="20250214 15:24:08.307" endtime="20250214 15:24:08.308"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resposta_status}</var>
<arg>${response.status_code}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:24:08.310" level="INFO">${resposta_status} = 200</msg>
<status status="PASS" starttime="20250214 15:24:08.309" endtime="20250214 15:24:08.310"/>
</kw>
<kw name="To Json" library="RequestsLibrary">
<var>${resposta}</var>
<arg>${resposta}</arg>
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<msg timestamp="20250214 15:24:08.311" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20250214 15:24:08.312" level="INFO">To JSON using : content={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Implbm5pZmVyODNAZXhhbXBsZS5uZXQiLCJwYXNzd29yZCI6IlpVTnF0TWp2NkwiLCJpYXQiOjE3Mzk1NTc0NDgsImV4cCI6MTczOTU1ODA0OH0.fWqEoPfYFoL8VdQxJWG2T1l0smoocNNeynMhdVwxxeE"
} </msg>
<msg timestamp="20250214 15:24:08.312" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20250214 15:24:08.312" level="INFO">${resposta} = {'message': 'Login realizado com sucesso', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Implbm5pZmVyODNAZXhhbXBsZS5uZXQiLCJwYXNzd29yZCI6IlpVTnF0TWp2NkwiLCJpYXQiOjE3Mzk1NTc...</msg>
<status status="PASS" starttime="20250214 15:24:08.311" endtime="20250214 15:24:08.312"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${resposta}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:08.314" level="INFO">${resposta} = {'message': 'Login realizado com sucesso', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Implbm5pZmVyODNAZXhhbXBsZS5uZXQiLCJwYXNzd29yZCI6IlpVTnF0TWp2NkwiLCJpYXQiOjE3Mzk1NTc...</msg>
<status status="PASS" starttime="20250214 15:24:08.313" endtime="20250214 15:24:08.314"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${resposta_status}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:08.315" level="INFO">${resposta_status} = 200</msg>
<status status="PASS" starttime="20250214 15:24:08.314" endtime="20250214 15:24:08.315"/>
</kw>
<status status="PASS" starttime="20250214 15:24:07.943" endtime="20250214 15:24:08.315"/>
</kw>
<if>
<branch type="IF" condition="&quot;${STATUSCODE}&quot; == &quot;200&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${token}</var>
<arg>${resposta['authorization']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:24:08.317" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Implbm5pZmVyODNAZXhhbXBsZS5uZXQiLCJwYXNzd29yZCI6IlpVTnF0TWp2NkwiLCJpYXQiOjE3Mzk1NTc0NDgsImV4cCI6MTczOTU1ODA0OH0.fWqEoPfYFoL8VdQxJWG2T1l0smoocNNe...</msg>
<status status="PASS" starttime="20250214 15:24:08.316" endtime="20250214 15:24:08.317"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${token}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:08.318" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Implbm5pZmVyODNAZXhhbXBsZS5uZXQiLCJwYXNzd29yZCI6IlpVTnF0TWp2NkwiLCJpYXQiOjE3Mzk1NTc0NDgsImV4cCI6MTczOTU1ODA0OH0.fWqEoPfYFoL8VdQxJWG2T1l0smoocNNe...</msg>
<status status="PASS" starttime="20250214 15:24:08.317" endtime="20250214 15:24:08.318"/>
</kw>
<status status="PASS" starttime="20250214 15:24:08.316" endtime="20250214 15:24:08.318"/>
</branch>
<status status="PASS" starttime="20250214 15:24:08.316" endtime="20250214 15:24:08.318"/>
</if>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${resposta}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:08.319" level="INFO">${resposta} = {'message': 'Login realizado com sucesso', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Implbm5pZmVyODNAZXhhbXBsZS5uZXQiLCJwYXNzd29yZCI6IlpVTnF0TWp2NkwiLCJpYXQiOjE3Mzk1NTc...</msg>
<status status="PASS" starttime="20250214 15:24:08.318" endtime="20250214 15:24:08.319"/>
</kw>
<status status="PASS" starttime="20250214 15:24:07.942" endtime="20250214 15:24:08.319"/>
</kw>
<status status="PASS" starttime="20250214 15:24:07.940" endtime="20250214 15:24:08.319"/>
</kw>
<status status="PASS" starttime="20250214 15:24:07.940" endtime="20250214 15:24:08.319"/>
</kw>
<kw name="Então sistema retornará status code &quot;200&quot; e gerará token corretamente" library="loginApiSteps" sourcename="Então sistema retornará status code &quot;${STATUSCODE}&quot; e gerará token corretamente">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${token}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20250214 15:24:08.321" level="INFO">Length is 211</msg>
<status status="PASS" starttime="20250214 15:24:08.321" endtime="20250214 15:24:08.321"/>
</kw>
<kw name="Então sistema terá o retorno de status code &quot;${STATUSCODE}&quot;" library="commons_api" sourcename="Então sistema terá o retorno de status code &quot;${STATUSCODE}&quot;">
<kw name="Convert To Number" library="BuiltIn">
<var>${STATUSCODE}</var>
<arg>${STATUSCODE}</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20250214 15:24:08.323" level="INFO">${STATUSCODE} = 200.0</msg>
<status status="PASS" starttime="20250214 15:24:08.322" endtime="20250214 15:24:08.323"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${resposta_status}</arg>
<arg>${STATUSCODE}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20250214 15:24:08.324" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'float'&gt;</msg>
<status status="PASS" starttime="20250214 15:24:08.323" endtime="20250214 15:24:08.324"/>
</kw>
<status status="PASS" starttime="20250214 15:24:08.321" endtime="20250214 15:24:08.325"/>
</kw>
<status status="PASS" starttime="20250214 15:24:08.320" endtime="20250214 15:24:08.325"/>
</kw>
<status status="PASS" starttime="20250214 15:24:07.001" endtime="20250214 15:24:08.325"/>
</test>
<test id="s1-s3-t2" name="Cenário 02: Login com usuario inválido" line="12">
<kw name="gerar usuário para testes de login" library="commons_api" type="SETUP">
<kw name="First Name" library="FakerLibrary">
<var>${nome_login}</var>
<msg timestamp="20250214 15:24:08.329" level="INFO">${nome_login} = David</msg>
<status status="PASS" starttime="20250214 15:24:08.329" endtime="20250214 15:24:08.329"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email_login}</var>
<msg timestamp="20250214 15:24:08.331" level="INFO">${email_login} = jdaniels@example.com</msg>
<status status="PASS" starttime="20250214 15:24:08.330" endtime="20250214 15:24:08.331"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha_login}</var>
<arg>special_chars=FALSE</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20250214 15:24:08.333" level="INFO">${senha_login} = iTnc2U7do0</msg>
<status status="PASS" starttime="20250214 15:24:08.332" endtime="20250214 15:24:08.333"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250214 15:24:08.840" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20250214 15:24:08.333" endtime="20250214 15:24:08.840"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${email_login}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:08.841" level="INFO">${email_login} = jdaniels@example.com</msg>
<status status="PASS" starttime="20250214 15:24:08.840" endtime="20250214 15:24:08.841"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${senha_login}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:08.842" level="INFO">${senha_login} = iTnc2U7do0</msg>
<status status="PASS" starttime="20250214 15:24:08.842" endtime="20250214 15:24:08.842"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${nome_login}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:08.843" level="INFO">${nome_login} = David</msg>
<status status="PASS" starttime="20250214 15:24:08.843" endtime="20250214 15:24:08.843"/>
</kw>
<kw name="criar usuário" library="usuariosApiKeywords">
<arg>${nome_login}</arg>
<arg>${email_login}</arg>
<arg>${senha_login}</arg>
<arg>true</arg>
<kw name="Gerar payload para cadastro de cliente" library="usuariosApiKeywords">
<arg>${nome}</arg>
<arg>${email}</arg>
<arg>${senha}</arg>
<arg>${adm}</arg>
<kw name="Criar Payload Para Cadastro De Cliente" library="createPayloads">
<var>${body}</var>
<arg>${NOME}</arg>
<arg>${EMAIL}</arg>
<arg>${SENHA}</arg>
<arg>${ADM}</arg>
<msg timestamp="20250214 15:24:08.847" level="INFO">${body} = {
    "nome": "David",
    "email": "jdaniels@example.com",
    "password": "iTnc2U7do0",
    "administrador": "true"
}</msg>
<status status="PASS" starttime="20250214 15:24:08.846" endtime="20250214 15:24:08.847"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${body}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:08.848" level="INFO">${body} = {
    "nome": "David",
    "email": "jdaniels@example.com",
    "password": "iTnc2U7do0",
    "administrador": "true"
}</msg>
<status status="PASS" starttime="20250214 15:24:08.847" endtime="20250214 15:24:08.848"/>
</kw>
<status status="PASS" starttime="20250214 15:24:08.845" endtime="20250214 15:24:08.848"/>
</kw>
<kw name="POST request test" library="commons_api">
<arg>/usuarios</arg>
<arg>${body}</arg>
<arg>201</arg>
<kw name="criar sessao" library="commons_api">
<kw name="Create Session" library="RequestsLibrary">
<arg>api</arg>
<arg>${BASE_URL_API}</arg>
<arg>verify=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20250214 15:24:08.850" level="INFO">Creating Session using : alias=api, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20250214 15:24:08.849" endtime="20250214 15:24:08.850"/>
</kw>
<status status="PASS" starttime="20250214 15:24:08.849" endtime="20250214 15:24:08.850"/>
</kw>
<kw name="Convert To Json" library="JsonValidator">
<var>${body}</var>
<arg>${body}</arg>
<doc>Convert a python object to JsonType.</doc>
<msg timestamp="20250214 15:24:08.851" level="INFO">${body} = {'nome': 'David', 'email': 'jdaniels@example.com', 'password': 'iTnc2U7do0', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20250214 15:24:08.850" endtime="20250214 15:24:08.851"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20250214 15:24:08.851" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" starttime="20250214 15:24:08.851" endtime="20250214 15:24:08.851"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>api</arg>
<arg>url=${url}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=${status}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20250214 15:24:09.221" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '101'} 
 body=b'{"nome": "David", "email": "jdaniels@example.com", "password": "iTnc2U7do0", "administrador": "true"}' 
 </msg>
<msg timestamp="20250214 15:24:09.221" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'aaf9975032df2e7ba73ad82812a1d8a6', 'Date': 'Fri, 14 Feb 2025 18:24:09 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "qflhXhO3mGXwhNik"
} 
 </msg>
<msg timestamp="20250214 15:24:09.221" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20250214 15:24:08.852" endtime="20250214 15:24:09.222"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resposta}</var>
<arg>${response.content}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:24:09.224" level="INFO">${resposta} = {
    "message": "Cadastro realizado com sucesso",
    "_id": "qflhXhO3mGXwhNik"
}</msg>
<status status="PASS" starttime="20250214 15:24:09.222" endtime="20250214 15:24:09.224"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resposta_status}</var>
<arg>${response.status_code}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:24:09.226" level="INFO">${resposta_status} = 201</msg>
<status status="PASS" starttime="20250214 15:24:09.224" endtime="20250214 15:24:09.226"/>
</kw>
<kw name="To Json" library="RequestsLibrary">
<var>${resposta}</var>
<arg>${resposta}</arg>
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<msg timestamp="20250214 15:24:09.227" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20250214 15:24:09.228" level="INFO">To JSON using : content={
    "message": "Cadastro realizado com sucesso",
    "_id": "qflhXhO3mGXwhNik"
} </msg>
<msg timestamp="20250214 15:24:09.228" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20250214 15:24:09.228" level="INFO">${resposta} = {'message': 'Cadastro realizado com sucesso', '_id': 'qflhXhO3mGXwhNik'}</msg>
<status status="PASS" starttime="20250214 15:24:09.227" endtime="20250214 15:24:09.229"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${resposta}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:09.229" level="INFO">${resposta} = {'message': 'Cadastro realizado com sucesso', '_id': 'qflhXhO3mGXwhNik'}</msg>
<status status="PASS" starttime="20250214 15:24:09.229" endtime="20250214 15:24:09.230"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${resposta_status}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:09.231" level="INFO">${resposta_status} = 201</msg>
<status status="PASS" starttime="20250214 15:24:09.230" endtime="20250214 15:24:09.231"/>
</kw>
<status status="PASS" starttime="20250214 15:24:08.848" endtime="20250214 15:24:09.231"/>
</kw>
<status status="PASS" starttime="20250214 15:24:08.844" endtime="20250214 15:24:09.232"/>
</kw>
<status status="PASS" starttime="20250214 15:24:08.328" endtime="20250214 15:24:09.232"/>
</kw>
<kw name="Quando acionar endpoint para efetuar login, para verificar mensagem de erro, com usuário &quot;${NOME}&quot; e Senha &quot;1234&quot;" library="loginApiSteps" sourcename="Quando acionar endpoint para efetuar login, para verificar mensagem de erro, com usuário &quot;${NOME}&quot; e Senha &quot;${SENHA}&quot;">
<kw name="efetuar login" library="loginApiKeywords">
<arg>${NOME}</arg>
<arg>${SENHA}</arg>
<arg>401</arg>
<kw name="Gerar payload para login" library="loginApiKeywords">
<arg>${EMAIL}</arg>
<arg>${SENHA}</arg>
<kw name="Criar Payload Para Gerar Token" library="createPayloads">
<var>${body}</var>
<arg>${EMAIL}</arg>
<arg>${SENHA}</arg>
<msg timestamp="20250214 15:24:09.238" level="INFO">${body} = {
    "email": "felipe@gmail.com.br",
    "password": "1234"
}</msg>
<status status="PASS" starttime="20250214 15:24:09.237" endtime="20250214 15:24:09.238"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${body}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:09.250" level="INFO">${body} = {
    "email": "felipe@gmail.com.br",
    "password": "1234"
}</msg>
<status status="PASS" starttime="20250214 15:24:09.244" endtime="20250214 15:24:09.250"/>
</kw>
<status status="PASS" starttime="20250214 15:24:09.235" endtime="20250214 15:24:09.250"/>
</kw>
<kw name="gerar token" library="commons_api">
<arg>${EMAIL}</arg>
<arg>${SENHA}</arg>
<arg>${STATUSCODE}</arg>
<kw name="POST request test" library="commons_api">
<arg>/login</arg>
<arg>${body}</arg>
<arg>${STATUSCODE}</arg>
<kw name="criar sessao" library="commons_api">
<kw name="Create Session" library="RequestsLibrary">
<arg>api</arg>
<arg>${BASE_URL_API}</arg>
<arg>verify=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20250214 15:24:09.256" level="INFO">Creating Session using : alias=api, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20250214 15:24:09.255" endtime="20250214 15:24:09.256"/>
</kw>
<status status="PASS" starttime="20250214 15:24:09.254" endtime="20250214 15:24:09.257"/>
</kw>
<kw name="Convert To Json" library="JsonValidator">
<var>${body}</var>
<arg>${body}</arg>
<doc>Convert a python object to JsonType.</doc>
<msg timestamp="20250214 15:24:09.258" level="INFO">${body} = {'email': 'felipe@gmail.com.br', 'password': '1234'}</msg>
<status status="PASS" starttime="20250214 15:24:09.257" endtime="20250214 15:24:09.258"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20250214 15:24:09.260" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" starttime="20250214 15:24:09.258" endtime="20250214 15:24:09.260"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>api</arg>
<arg>url=${url}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=${status}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20250214 15:24:09.646" level="INFO">POST Request : url=https://serverest.dev/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '52'} 
 body=b'{"email": "felipe@gmail.com.br", "password": "1234"}' 
 </msg>
<msg timestamp="20250214 15:24:09.646" level="INFO">POST Response : url=https://serverest.dev/login 
 status=401, reason=Unauthorized 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '80d2dd7dae4870a4a2a103980ef52c5f', 'Date': 'Fri, 14 Feb 2025 18:24:09 GMT', 'Server': 'Google Frontend', 'Content-Length': '48'} 
 body={
    "message": "Email e/ou senha inválidos"
} 
 </msg>
<msg timestamp="20250214 15:24:09.646" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<status status="PASS" starttime="20250214 15:24:09.261" endtime="20250214 15:24:09.646"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resposta}</var>
<arg>${response.content}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:24:09.647" level="INFO">${resposta} = {
    "message": "Email e/ou senha inv\xc3\xa1lidos"
}</msg>
<status status="PASS" starttime="20250214 15:24:09.646" endtime="20250214 15:24:09.647"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resposta_status}</var>
<arg>${response.status_code}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:24:09.649" level="INFO">${resposta_status} = 401</msg>
<status status="PASS" starttime="20250214 15:24:09.648" endtime="20250214 15:24:09.649"/>
</kw>
<kw name="To Json" library="RequestsLibrary">
<var>${resposta}</var>
<arg>${resposta}</arg>
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<msg timestamp="20250214 15:24:09.650" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20250214 15:24:09.650" level="INFO">To JSON using : content={
    "message": "Email e/ou senha inválidos"
} </msg>
<msg timestamp="20250214 15:24:09.650" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20250214 15:24:09.650" level="INFO">${resposta} = {'message': 'Email e/ou senha inválidos'}</msg>
<status status="PASS" starttime="20250214 15:24:09.650" endtime="20250214 15:24:09.651"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${resposta}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:09.652" level="INFO">${resposta} = {'message': 'Email e/ou senha inválidos'}</msg>
<status status="PASS" starttime="20250214 15:24:09.651" endtime="20250214 15:24:09.652"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${resposta_status}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:09.653" level="INFO">${resposta_status} = 401</msg>
<status status="PASS" starttime="20250214 15:24:09.652" endtime="20250214 15:24:09.653"/>
</kw>
<status status="PASS" starttime="20250214 15:24:09.252" endtime="20250214 15:24:09.653"/>
</kw>
<if>
<branch type="IF" condition="&quot;${STATUSCODE}&quot; == &quot;200&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${token}</var>
<arg>${resposta['authorization']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250214 15:24:09.654" endtime="20250214 15:24:09.655"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${token}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20250214 15:24:09.655" endtime="20250214 15:24:09.655"/>
</kw>
<status status="NOT RUN" starttime="20250214 15:24:09.654" endtime="20250214 15:24:09.655"/>
</branch>
<status status="PASS" starttime="20250214 15:24:09.654" endtime="20250214 15:24:09.656"/>
</if>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${resposta}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:09.656" level="INFO">${resposta} = {'message': 'Email e/ou senha inválidos'}</msg>
<status status="PASS" starttime="20250214 15:24:09.656" endtime="20250214 15:24:09.656"/>
</kw>
<status status="PASS" starttime="20250214 15:24:09.251" endtime="20250214 15:24:09.657"/>
</kw>
<status status="PASS" starttime="20250214 15:24:09.234" endtime="20250214 15:24:09.657"/>
</kw>
<status status="PASS" starttime="20250214 15:24:09.233" endtime="20250214 15:24:09.657"/>
</kw>
<kw name="Então sistema terá o retorno de status code &quot;401&quot;" library="commons_api" sourcename="Então sistema terá o retorno de status code &quot;${STATUSCODE}&quot;">
<kw name="Convert To Number" library="BuiltIn">
<var>${STATUSCODE}</var>
<arg>${STATUSCODE}</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20250214 15:24:09.658" level="INFO">${STATUSCODE} = 401.0</msg>
<status status="PASS" starttime="20250214 15:24:09.658" endtime="20250214 15:24:09.658"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${resposta_status}</arg>
<arg>${STATUSCODE}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20250214 15:24:09.659" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'float'&gt;</msg>
<status status="PASS" starttime="20250214 15:24:09.658" endtime="20250214 15:24:09.659"/>
</kw>
<status status="PASS" starttime="20250214 15:24:09.657" endtime="20250214 15:24:09.659"/>
</kw>
<kw name="E apresentará a mensagem &quot;Email e/ou senha inválidos&quot;" library="commons_api" sourcename="E apresentará a mensagem &quot;${msg}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${msg}</arg>
<arg>${resposta['message']}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 15:24:09.661" endtime="20250214 15:24:09.662"/>
</kw>
<status status="PASS" starttime="20250214 15:24:09.659" endtime="20250214 15:24:09.662"/>
</kw>
<status status="PASS" starttime="20250214 15:24:08.326" endtime="20250214 15:24:09.662"/>
</test>
<doc>Testes de login e logout</doc>
<status status="PASS" starttime="20250214 15:24:05.679" endtime="20250214 15:24:09.663"/>
</suite>
<suite id="s1-s4" name="usuariosApiTest" source="C:\Users\55619\Dropbox\My PC (DESKTOP-8Q92QEK)\Documents\projetos\servRest\automacao-com-robot-framework-api-web\API\tests\usuarios\usuariosApiTest.robot">
<test id="s1-s4-t1" name="Cenário 01: cadastrar usuário com sucesso" line="9">
<kw name="First Name" library="FakerLibrary">
<var>${nome}</var>
<msg timestamp="20250214 15:24:06.976" level="INFO">${nome} = Brandon</msg>
<status status="PASS" starttime="20250214 15:24:06.975" endtime="20250214 15:24:06.976"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20250214 15:24:06.976" level="INFO">${email} = ashley31@example.org</msg>
<status status="PASS" starttime="20250214 15:24:06.976" endtime="20250214 15:24:06.977"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20250214 15:24:06.977" level="INFO">${senha} = 9C0U1@we+0</msg>
<status status="PASS" starttime="20250214 15:24:06.977" endtime="20250214 15:24:06.977"/>
</kw>
<kw name="Quando acionar a api para cadastro de cliente administrador e enviar nome &quot;${nome}&quot;, Email &quot;${email}&quot; e senha &quot;${senha}&quot;" library="usuariosApiSteps" sourcename="Quando acionar a api para cadastro de cliente administrador e enviar nome &quot;${nome}&quot;, Email &quot;${email}&quot; e senha &quot;${senha}&quot;">
<kw name="criar usuário" library="usuariosApiKeywords">
<arg>${nome}</arg>
<arg>${email}</arg>
<arg>${senha}</arg>
<arg>true</arg>
<kw name="Gerar payload para cadastro de cliente" library="usuariosApiKeywords">
<arg>${nome}</arg>
<arg>${email}</arg>
<arg>${senha}</arg>
<arg>${adm}</arg>
<kw name="Criar Payload Para Cadastro De Cliente" library="createPayloads">
<var>${body}</var>
<arg>${NOME}</arg>
<arg>${EMAIL}</arg>
<arg>${SENHA}</arg>
<arg>${ADM}</arg>
<msg timestamp="20250214 15:24:06.980" level="INFO">${body} = {
    "nome": "Brandon",
    "email": "ashley31@example.org",
    "password": "9C0U1@we+0",
    "administrador": "true"
}</msg>
<status status="PASS" starttime="20250214 15:24:06.979" endtime="20250214 15:24:06.980"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${body}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:06.980" level="INFO">${body} = {
    "nome": "Brandon",
    "email": "ashley31@example.org",
    "password": "9C0U1@we+0",
    "administrador": "true"
}</msg>
<status status="PASS" starttime="20250214 15:24:06.980" endtime="20250214 15:24:06.980"/>
</kw>
<status status="PASS" starttime="20250214 15:24:06.978" endtime="20250214 15:24:06.980"/>
</kw>
<kw name="POST request test" library="commons_api">
<arg>/usuarios</arg>
<arg>${body}</arg>
<arg>201</arg>
<kw name="criar sessao" library="commons_api">
<kw name="Create Session" library="RequestsLibrary">
<arg>api</arg>
<arg>${BASE_URL_API}</arg>
<arg>verify=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20250214 15:24:06.982" level="INFO">Creating Session using : alias=api, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20250214 15:24:06.981" endtime="20250214 15:24:06.982"/>
</kw>
<status status="PASS" starttime="20250214 15:24:06.981" endtime="20250214 15:24:06.982"/>
</kw>
<kw name="Convert To Json" library="JsonValidator">
<var>${body}</var>
<arg>${body}</arg>
<doc>Convert a python object to JsonType.</doc>
<msg timestamp="20250214 15:24:06.983" level="INFO">${body} = {'nome': 'Brandon', 'email': 'ashley31@example.org', 'password': '9C0U1@we+0', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20250214 15:24:06.982" endtime="20250214 15:24:06.983"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20250214 15:24:06.984" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" starttime="20250214 15:24:06.983" endtime="20250214 15:24:06.984"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>api</arg>
<arg>url=${url}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=${status}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20250214 15:24:07.373" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '103'} 
 body=b'{"nome": "Brandon", "email": "ashley31@example.org", "password": "9C0U1@we+0", "administrador": "true"}' 
 </msg>
<msg timestamp="20250214 15:24:07.374" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'c2ffa0e51a3e96e81898326fa377829b;o=1', 'Date': 'Fri, 14 Feb 2025 18:24:07 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "2DvNfIg8rl4h8fS4"
} 
 </msg>
<msg timestamp="20250214 15:24:07.374" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20250214 15:24:06.984" endtime="20250214 15:24:07.374"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resposta}</var>
<arg>${response.content}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:24:07.376" level="INFO">${resposta} = {
    "message": "Cadastro realizado com sucesso",
    "_id": "2DvNfIg8rl4h8fS4"
}</msg>
<status status="PASS" starttime="20250214 15:24:07.374" endtime="20250214 15:24:07.376"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resposta_status}</var>
<arg>${response.status_code}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:24:07.378" level="INFO">${resposta_status} = 201</msg>
<status status="PASS" starttime="20250214 15:24:07.376" endtime="20250214 15:24:07.378"/>
</kw>
<kw name="To Json" library="RequestsLibrary">
<var>${resposta}</var>
<arg>${resposta}</arg>
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<msg timestamp="20250214 15:24:07.378" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20250214 15:24:07.379" level="INFO">To JSON using : content={
    "message": "Cadastro realizado com sucesso",
    "_id": "2DvNfIg8rl4h8fS4"
} </msg>
<msg timestamp="20250214 15:24:07.379" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20250214 15:24:07.379" level="INFO">${resposta} = {'message': 'Cadastro realizado com sucesso', '_id': '2DvNfIg8rl4h8fS4'}</msg>
<status status="PASS" starttime="20250214 15:24:07.378" endtime="20250214 15:24:07.379"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${resposta}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:07.381" level="INFO">${resposta} = {'message': 'Cadastro realizado com sucesso', '_id': '2DvNfIg8rl4h8fS4'}</msg>
<status status="PASS" starttime="20250214 15:24:07.380" endtime="20250214 15:24:07.381"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${resposta_status}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:07.382" level="INFO">${resposta_status} = 201</msg>
<status status="PASS" starttime="20250214 15:24:07.381" endtime="20250214 15:24:07.382"/>
</kw>
<status status="PASS" starttime="20250214 15:24:06.981" endtime="20250214 15:24:07.383"/>
</kw>
<status status="PASS" starttime="20250214 15:24:06.978" endtime="20250214 15:24:07.383"/>
</kw>
<status status="PASS" starttime="20250214 15:24:06.977" endtime="20250214 15:24:07.383"/>
</kw>
<kw name="Então sistema efetuará o cadastro do ciente com sucesso" library="usuariosApiSteps">
<kw name="Então sistema terá o retorno de status code &quot;201&quot;" library="commons_api" sourcename="Então sistema terá o retorno de status code &quot;${STATUSCODE}&quot;">
<kw name="Convert To Number" library="BuiltIn">
<var>${STATUSCODE}</var>
<arg>${STATUSCODE}</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20250214 15:24:07.387" level="INFO">${STATUSCODE} = 201.0</msg>
<status status="PASS" starttime="20250214 15:24:07.386" endtime="20250214 15:24:07.387"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${resposta_status}</arg>
<arg>${STATUSCODE}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20250214 15:24:07.388" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'float'&gt;</msg>
<status status="PASS" starttime="20250214 15:24:07.387" endtime="20250214 15:24:07.388"/>
</kw>
<status status="PASS" starttime="20250214 15:24:07.385" endtime="20250214 15:24:07.388"/>
</kw>
<kw name="E apresentará a mensagem &quot;Cadastro realizado com sucesso&quot;" library="commons_api" sourcename="E apresentará a mensagem &quot;${msg}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${msg}</arg>
<arg>${resposta['message']}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 15:24:07.390" endtime="20250214 15:24:07.391"/>
</kw>
<status status="PASS" starttime="20250214 15:24:07.389" endtime="20250214 15:24:07.392"/>
</kw>
<status status="PASS" starttime="20250214 15:24:07.384" endtime="20250214 15:24:07.392"/>
</kw>
<status status="PASS" starttime="20250214 15:24:06.974" endtime="20250214 15:24:07.392"/>
</test>
<doc>Testes de Listar usuários</doc>
<status status="PASS" starttime="20250214 15:24:05.697" endtime="20250214 15:24:07.393"/>
</suite>
<doc>[https://pabot.org/?ref=log|Pabot] result from 4 executions.</doc>
<status status="PASS" starttime="20250214 15:24:05.629" endtime="20250214 15:24:38.184"/>
</suite>
<statistics>
<total>
<stat pass="7" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="7" fail="0" skip="0" id="s1" name="Suites">Suites</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="listarUsuariosTest">Suites.listarUsuariosTest</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="loginTest">Suites.loginTest</stat>
<stat pass="2" fail="0" skip="0" id="s1-s3" name="loginApiTest">Suites.loginApiTest</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="usuariosApiTest">Suites.usuariosApiTest</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20250214 15:24:07.051" level="WARN">Imported resource file 'C:\Users\55619\Dropbox\My PC (DESKTOP-8Q92QEK)\Documents\projetos\servRest\automacao-com-robot-framework-api-web\API\resources\feature\login\loginApiVariables.resource' is empty.</msg>
<msg timestamp="20250214 15:24:08.092" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20250214 15:24:07.046" level="WARN">Imported resource file 'C:\Users\55619\Dropbox\My PC (DESKTOP-8Q92QEK)\Documents\projetos\servRest\automacao-com-robot-framework-api-web\API\resources\feature\login\loginApiVariables.resource' is empty.</msg>
<msg timestamp="20250214 15:24:08.087" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20250214 15:24:19.135" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20250214 15:24:06.984" level="WARN">Imported resource file 'C:\Users\55619\Dropbox\My PC (DESKTOP-8Q92QEK)\Documents\projetos\servRest\automacao-com-robot-framework-api-web\API\resources\feature\login\loginApiVariables.resource' is empty.</msg>
<msg timestamp="20250214 15:24:07.938" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20250214 15:24:08.311" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20250214 15:24:09.227" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20250214 15:24:09.650" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20250214 15:24:06.959" level="WARN">Imported resource file 'C:\Users\55619\Dropbox\My PC (DESKTOP-8Q92QEK)\Documents\projetos\servRest\automacao-com-robot-framework-api-web\API\resources\feature\login\loginApiVariables.resource' is empty.</msg>
<msg timestamp="20250214 15:24:07.378" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
</errors>
</robot>
