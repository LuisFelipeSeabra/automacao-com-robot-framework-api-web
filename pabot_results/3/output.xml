<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.8.8rc1 on win32)" generated="20250214 15:24:05.649" rpa="false" schemaversion="3">
<suite id="s1" name="Suites">
<suite id="s1-s1" name="usuariosApiTest" source="C:\Users\55619\Dropbox\My PC (DESKTOP-8Q92QEK)\Documents\projetos\servRest\automacao-com-robot-framework-api-web\API\tests\usuarios\usuariosApiTest.robot">
<test id="s1-s1-t1" name="Cenário 01: cadastrar usuário com sucesso" line="9">
<kw name="First Name" library="FakerLibrary">
<var>${nome}</var>
<msg timestamp="20250214 15:24:06.976" level="INFO">${nome} = Brandon</msg>
<status status="PASS" starttime="20250214 15:24:06.975" endtime="20250214 15:24:06.976"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email}</var>
<msg timestamp="20250214 15:24:06.976" level="INFO">${email} = ashley31@example.org</msg>
<status status="PASS" starttime="20250214 15:24:06.976" endtime="20250214 15:24:06.977"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha}</var>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20250214 15:24:06.977" level="INFO">${senha} = 9C0U1@we+0</msg>
<status status="PASS" starttime="20250214 15:24:06.977" endtime="20250214 15:24:06.977"/>
</kw>
<kw name="Quando acionar a api para cadastro de cliente administrador e enviar nome &quot;${nome}&quot;, Email &quot;${email}&quot; e senha &quot;${senha}&quot;" library="usuariosApiSteps" sourcename="Quando acionar a api para cadastro de cliente administrador e enviar nome &quot;${nome}&quot;, Email &quot;${email}&quot; e senha &quot;${senha}&quot;">
<kw name="criar usuário" library="usuariosApiKeywords">
<arg>${nome}</arg>
<arg>${email}</arg>
<arg>${senha}</arg>
<arg>true</arg>
<kw name="Gerar payload para cadastro de cliente" library="usuariosApiKeywords">
<arg>${nome}</arg>
<arg>${email}</arg>
<arg>${senha}</arg>
<arg>${adm}</arg>
<kw name="Criar Payload Para Cadastro De Cliente" library="createPayloads">
<var>${body}</var>
<arg>${NOME}</arg>
<arg>${EMAIL}</arg>
<arg>${SENHA}</arg>
<arg>${ADM}</arg>
<msg timestamp="20250214 15:24:06.980" level="INFO">${body} = {
    "nome": "Brandon",
    "email": "ashley31@example.org",
    "password": "9C0U1@we+0",
    "administrador": "true"
}</msg>
<status status="PASS" starttime="20250214 15:24:06.979" endtime="20250214 15:24:06.980"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${body}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:06.980" level="INFO">${body} = {
    "nome": "Brandon",
    "email": "ashley31@example.org",
    "password": "9C0U1@we+0",
    "administrador": "true"
}</msg>
<status status="PASS" starttime="20250214 15:24:06.980" endtime="20250214 15:24:06.980"/>
</kw>
<status status="PASS" starttime="20250214 15:24:06.978" endtime="20250214 15:24:06.980"/>
</kw>
<kw name="POST request test" library="commons_api">
<arg>/usuarios</arg>
<arg>${body}</arg>
<arg>201</arg>
<kw name="criar sessao" library="commons_api">
<kw name="Create Session" library="RequestsLibrary">
<arg>api</arg>
<arg>${BASE_URL_API}</arg>
<arg>verify=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20250214 15:24:06.982" level="INFO">Creating Session using : alias=api, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20250214 15:24:06.981" endtime="20250214 15:24:06.982"/>
</kw>
<status status="PASS" starttime="20250214 15:24:06.981" endtime="20250214 15:24:06.982"/>
</kw>
<kw name="Convert To Json" library="JsonValidator">
<var>${body}</var>
<arg>${body}</arg>
<doc>Convert a python object to JsonType.</doc>
<msg timestamp="20250214 15:24:06.983" level="INFO">${body} = {'nome': 'Brandon', 'email': 'ashley31@example.org', 'password': '9C0U1@we+0', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20250214 15:24:06.982" endtime="20250214 15:24:06.983"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20250214 15:24:06.984" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" starttime="20250214 15:24:06.983" endtime="20250214 15:24:06.984"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>api</arg>
<arg>url=${url}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=${status}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20250214 15:24:07.373" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '103'} 
 body=b'{"nome": "Brandon", "email": "ashley31@example.org", "password": "9C0U1@we+0", "administrador": "true"}' 
 </msg>
<msg timestamp="20250214 15:24:07.374" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'c2ffa0e51a3e96e81898326fa377829b;o=1', 'Date': 'Fri, 14 Feb 2025 18:24:07 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "2DvNfIg8rl4h8fS4"
} 
 </msg>
<msg timestamp="20250214 15:24:07.374" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20250214 15:24:06.984" endtime="20250214 15:24:07.374"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resposta}</var>
<arg>${response.content}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:24:07.376" level="INFO">${resposta} = {
    "message": "Cadastro realizado com sucesso",
    "_id": "2DvNfIg8rl4h8fS4"
}</msg>
<status status="PASS" starttime="20250214 15:24:07.374" endtime="20250214 15:24:07.376"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resposta_status}</var>
<arg>${response.status_code}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:24:07.378" level="INFO">${resposta_status} = 201</msg>
<status status="PASS" starttime="20250214 15:24:07.376" endtime="20250214 15:24:07.378"/>
</kw>
<kw name="To Json" library="RequestsLibrary">
<var>${resposta}</var>
<arg>${resposta}</arg>
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<msg timestamp="20250214 15:24:07.378" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20250214 15:24:07.379" level="INFO">To JSON using : content={
    "message": "Cadastro realizado com sucesso",
    "_id": "2DvNfIg8rl4h8fS4"
} </msg>
<msg timestamp="20250214 15:24:07.379" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20250214 15:24:07.379" level="INFO">${resposta} = {'message': 'Cadastro realizado com sucesso', '_id': '2DvNfIg8rl4h8fS4'}</msg>
<status status="PASS" starttime="20250214 15:24:07.378" endtime="20250214 15:24:07.379"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${resposta}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:07.381" level="INFO">${resposta} = {'message': 'Cadastro realizado com sucesso', '_id': '2DvNfIg8rl4h8fS4'}</msg>
<status status="PASS" starttime="20250214 15:24:07.380" endtime="20250214 15:24:07.381"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${resposta_status}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:07.382" level="INFO">${resposta_status} = 201</msg>
<status status="PASS" starttime="20250214 15:24:07.381" endtime="20250214 15:24:07.382"/>
</kw>
<status status="PASS" starttime="20250214 15:24:06.981" endtime="20250214 15:24:07.383"/>
</kw>
<status status="PASS" starttime="20250214 15:24:06.978" endtime="20250214 15:24:07.383"/>
</kw>
<status status="PASS" starttime="20250214 15:24:06.977" endtime="20250214 15:24:07.383"/>
</kw>
<kw name="Então sistema efetuará o cadastro do ciente com sucesso" library="usuariosApiSteps">
<kw name="Então sistema terá o retorno de status code &quot;201&quot;" library="commons_api" sourcename="Então sistema terá o retorno de status code &quot;${STATUSCODE}&quot;">
<kw name="Convert To Number" library="BuiltIn">
<var>${STATUSCODE}</var>
<arg>${STATUSCODE}</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20250214 15:24:07.387" level="INFO">${STATUSCODE} = 201.0</msg>
<status status="PASS" starttime="20250214 15:24:07.386" endtime="20250214 15:24:07.387"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${resposta_status}</arg>
<arg>${STATUSCODE}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20250214 15:24:07.388" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'float'&gt;</msg>
<status status="PASS" starttime="20250214 15:24:07.387" endtime="20250214 15:24:07.388"/>
</kw>
<status status="PASS" starttime="20250214 15:24:07.385" endtime="20250214 15:24:07.388"/>
</kw>
<kw name="E apresentará a mensagem &quot;Cadastro realizado com sucesso&quot;" library="commons_api" sourcename="E apresentará a mensagem &quot;${msg}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${msg}</arg>
<arg>${resposta['message']}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 15:24:07.390" endtime="20250214 15:24:07.391"/>
</kw>
<status status="PASS" starttime="20250214 15:24:07.389" endtime="20250214 15:24:07.392"/>
</kw>
<status status="PASS" starttime="20250214 15:24:07.384" endtime="20250214 15:24:07.392"/>
</kw>
<status status="PASS" starttime="20250214 15:24:06.974" endtime="20250214 15:24:07.392"/>
</test>
<doc>Testes de Listar usuários</doc>
<status status="PASS" starttime="20250214 15:24:05.697" endtime="20250214 15:24:07.393"/>
</suite>
<status status="PASS" starttime="20250214 15:24:05.667" endtime="20250214 15:24:07.396"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Suites">Suites</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="usuariosApiTest">Suites.usuariosApiTest</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20250214 15:24:06.959" level="WARN">Imported resource file 'C:\Users\55619\Dropbox\My PC (DESKTOP-8Q92QEK)\Documents\projetos\servRest\automacao-com-robot-framework-api-web\API\resources\feature\login\loginApiVariables.resource' is empty.</msg>
<msg timestamp="20250214 15:24:07.378" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
</errors>
</robot>
