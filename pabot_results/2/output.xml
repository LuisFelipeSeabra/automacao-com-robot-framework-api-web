<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.8.8rc1 on win32)" generated="20250214 15:24:05.629" rpa="false" schemaversion="3">
<suite id="s1" name="Suites">
<suite id="s1-s1" name="loginApiTest" source="C:\Users\55619\Dropbox\My PC (DESKTOP-8Q92QEK)\Documents\projetos\servRest\automacao-com-robot-framework-api-web\API\tests\login\loginApiTest.robot">
<test id="s1-s1-t1" name="Cenário 01: Login com sucesso" line="8">
<kw name="gerar usuário para testes de login" library="commons_api" type="SETUP">
<kw name="First Name" library="FakerLibrary">
<var>${nome_login}</var>
<msg timestamp="20250214 15:24:07.003" level="INFO">${nome_login} = Bobby</msg>
<status status="PASS" starttime="20250214 15:24:07.003" endtime="20250214 15:24:07.003"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email_login}</var>
<msg timestamp="20250214 15:24:07.004" level="INFO">${email_login} = jennifer83@example.net</msg>
<status status="PASS" starttime="20250214 15:24:07.003" endtime="20250214 15:24:07.004"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha_login}</var>
<arg>special_chars=FALSE</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20250214 15:24:07.004" level="INFO">${senha_login} = ZUNqtMjv6L</msg>
<status status="PASS" starttime="20250214 15:24:07.004" endtime="20250214 15:24:07.005"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250214 15:24:07.519" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20250214 15:24:07.005" endtime="20250214 15:24:07.519"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${email_login}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:07.521" level="INFO">${email_login} = jennifer83@example.net</msg>
<status status="PASS" starttime="20250214 15:24:07.520" endtime="20250214 15:24:07.521"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${senha_login}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:07.522" level="INFO">${senha_login} = ZUNqtMjv6L</msg>
<status status="PASS" starttime="20250214 15:24:07.521" endtime="20250214 15:24:07.522"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${nome_login}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:07.524" level="INFO">${nome_login} = Bobby</msg>
<status status="PASS" starttime="20250214 15:24:07.523" endtime="20250214 15:24:07.524"/>
</kw>
<kw name="criar usuário" library="usuariosApiKeywords">
<arg>${nome_login}</arg>
<arg>${email_login}</arg>
<arg>${senha_login}</arg>
<arg>true</arg>
<kw name="Gerar payload para cadastro de cliente" library="usuariosApiKeywords">
<arg>${nome}</arg>
<arg>${email}</arg>
<arg>${senha}</arg>
<arg>${adm}</arg>
<kw name="Criar Payload Para Cadastro De Cliente" library="createPayloads">
<var>${body}</var>
<arg>${NOME}</arg>
<arg>${EMAIL}</arg>
<arg>${SENHA}</arg>
<arg>${ADM}</arg>
<msg timestamp="20250214 15:24:07.528" level="INFO">${body} = {
    "nome": "Bobby",
    "email": "jennifer83@example.net",
    "password": "ZUNqtMjv6L",
    "administrador": "true"
}</msg>
<status status="PASS" starttime="20250214 15:24:07.527" endtime="20250214 15:24:07.528"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${body}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:07.530" level="INFO">${body} = {
    "nome": "Bobby",
    "email": "jennifer83@example.net",
    "password": "ZUNqtMjv6L",
    "administrador": "true"
}</msg>
<status status="PASS" starttime="20250214 15:24:07.529" endtime="20250214 15:24:07.530"/>
</kw>
<status status="PASS" starttime="20250214 15:24:07.525" endtime="20250214 15:24:07.530"/>
</kw>
<kw name="POST request test" library="commons_api">
<arg>/usuarios</arg>
<arg>${body}</arg>
<arg>201</arg>
<kw name="criar sessao" library="commons_api">
<kw name="Create Session" library="RequestsLibrary">
<arg>api</arg>
<arg>${BASE_URL_API}</arg>
<arg>verify=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20250214 15:24:07.534" level="INFO">Creating Session using : alias=api, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20250214 15:24:07.533" endtime="20250214 15:24:07.534"/>
</kw>
<status status="PASS" starttime="20250214 15:24:07.532" endtime="20250214 15:24:07.535"/>
</kw>
<kw name="Convert To Json" library="JsonValidator">
<var>${body}</var>
<arg>${body}</arg>
<doc>Convert a python object to JsonType.</doc>
<msg timestamp="20250214 15:24:07.536" level="INFO">${body} = {'nome': 'Bobby', 'email': 'jennifer83@example.net', 'password': 'ZUNqtMjv6L', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20250214 15:24:07.535" endtime="20250214 15:24:07.537"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20250214 15:24:07.538" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" starttime="20250214 15:24:07.537" endtime="20250214 15:24:07.538"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>api</arg>
<arg>url=${url}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=${status}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20250214 15:24:07.935" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '103'} 
 body=b'{"nome": "Bobby", "email": "jennifer83@example.net", "password": "ZUNqtMjv6L", "administrador": "true"}' 
 </msg>
<msg timestamp="20250214 15:24:07.935" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'cafd55feb7a8a527f6bfe4dbf1cd3af5', 'Date': 'Fri, 14 Feb 2025 18:24:07 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "ia5CmXC6FKXlOBri"
} 
 </msg>
<msg timestamp="20250214 15:24:07.935" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20250214 15:24:07.539" endtime="20250214 15:24:07.935"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resposta}</var>
<arg>${response.content}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:24:07.936" level="INFO">${resposta} = {
    "message": "Cadastro realizado com sucesso",
    "_id": "ia5CmXC6FKXlOBri"
}</msg>
<status status="PASS" starttime="20250214 15:24:07.935" endtime="20250214 15:24:07.936"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resposta_status}</var>
<arg>${response.status_code}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:24:07.937" level="INFO">${resposta_status} = 201</msg>
<status status="PASS" starttime="20250214 15:24:07.936" endtime="20250214 15:24:07.937"/>
</kw>
<kw name="To Json" library="RequestsLibrary">
<var>${resposta}</var>
<arg>${resposta}</arg>
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<msg timestamp="20250214 15:24:07.938" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20250214 15:24:07.938" level="INFO">To JSON using : content={
    "message": "Cadastro realizado com sucesso",
    "_id": "ia5CmXC6FKXlOBri"
} </msg>
<msg timestamp="20250214 15:24:07.938" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20250214 15:24:07.938" level="INFO">${resposta} = {'message': 'Cadastro realizado com sucesso', '_id': 'ia5CmXC6FKXlOBri'}</msg>
<status status="PASS" starttime="20250214 15:24:07.937" endtime="20250214 15:24:07.938"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${resposta}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:07.938" level="INFO">${resposta} = {'message': 'Cadastro realizado com sucesso', '_id': 'ia5CmXC6FKXlOBri'}</msg>
<status status="PASS" starttime="20250214 15:24:07.938" endtime="20250214 15:24:07.939"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${resposta_status}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:07.939" level="INFO">${resposta_status} = 201</msg>
<status status="PASS" starttime="20250214 15:24:07.939" endtime="20250214 15:24:07.939"/>
</kw>
<status status="PASS" starttime="20250214 15:24:07.531" endtime="20250214 15:24:07.939"/>
</kw>
<status status="PASS" starttime="20250214 15:24:07.524" endtime="20250214 15:24:07.939"/>
</kw>
<status status="PASS" starttime="20250214 15:24:07.002" endtime="20250214 15:24:07.940"/>
</kw>
<kw name="Quando acionar endpoint para efetuar login com usuário &quot;${email_login}&quot; e Senha &quot;${senha_login}&quot;" library="loginApiSteps" sourcename="Quando acionar endpoint para efetuar login com usuário &quot;${NOME}&quot; e Senha &quot;${SENHA}&quot;">
<kw name="efetuar login" library="loginApiKeywords">
<arg>${NOME}</arg>
<arg>${SENHA}</arg>
<arg>200</arg>
<kw name="Gerar payload para login" library="loginApiKeywords">
<arg>${EMAIL}</arg>
<arg>${SENHA}</arg>
<kw name="Criar Payload Para Gerar Token" library="createPayloads">
<var>${body}</var>
<arg>${EMAIL}</arg>
<arg>${SENHA}</arg>
<msg timestamp="20250214 15:24:07.942" level="INFO">${body} = {
    "email": "jennifer83@example.net",
    "password": "ZUNqtMjv6L"
}</msg>
<status status="PASS" starttime="20250214 15:24:07.941" endtime="20250214 15:24:07.942"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${body}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:07.942" level="INFO">${body} = {
    "email": "jennifer83@example.net",
    "password": "ZUNqtMjv6L"
}</msg>
<status status="PASS" starttime="20250214 15:24:07.942" endtime="20250214 15:24:07.942"/>
</kw>
<status status="PASS" starttime="20250214 15:24:07.941" endtime="20250214 15:24:07.942"/>
</kw>
<kw name="gerar token" library="commons_api">
<arg>${EMAIL}</arg>
<arg>${SENHA}</arg>
<arg>${STATUSCODE}</arg>
<kw name="POST request test" library="commons_api">
<arg>/login</arg>
<arg>${body}</arg>
<arg>${STATUSCODE}</arg>
<kw name="criar sessao" library="commons_api">
<kw name="Create Session" library="RequestsLibrary">
<arg>api</arg>
<arg>${BASE_URL_API}</arg>
<arg>verify=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20250214 15:24:07.945" level="INFO">Creating Session using : alias=api, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20250214 15:24:07.944" endtime="20250214 15:24:07.945"/>
</kw>
<status status="PASS" starttime="20250214 15:24:07.944" endtime="20250214 15:24:07.945"/>
</kw>
<kw name="Convert To Json" library="JsonValidator">
<var>${body}</var>
<arg>${body}</arg>
<doc>Convert a python object to JsonType.</doc>
<msg timestamp="20250214 15:24:07.946" level="INFO">${body} = {'email': 'jennifer83@example.net', 'password': 'ZUNqtMjv6L'}</msg>
<status status="PASS" starttime="20250214 15:24:07.945" endtime="20250214 15:24:07.946"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20250214 15:24:07.946" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" starttime="20250214 15:24:07.946" endtime="20250214 15:24:07.946"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>api</arg>
<arg>url=${url}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=${status}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20250214 15:24:08.306" level="INFO">POST Request : url=https://serverest.dev/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '61'} 
 body=b'{"email": "jennifer83@example.net", "password": "ZUNqtMjv6L"}' 
 </msg>
<msg timestamp="20250214 15:24:08.306" level="INFO">POST Response : url=https://serverest.dev/login 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '9ab0401a0a38f352fac989c68de9999e', 'Date': 'Fri, 14 Feb 2025 18:24:08 GMT', 'Server': 'Google Frontend', 'Content-Length': '284'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Implbm5pZmVyODNAZXhhbXBsZS5uZXQiLCJwYXNzd29yZCI6IlpVTnF0TWp2NkwiLCJpYXQiOjE3Mzk1NTc0NDgsImV4cCI6MTczOTU1ODA0OH0.fWqEoPfYFoL8VdQxJWG2T1l0smoocNNeynMhdVwxxeE"
} 
 </msg>
<msg timestamp="20250214 15:24:08.307" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20250214 15:24:07.946" endtime="20250214 15:24:08.307"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resposta}</var>
<arg>${response.content}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:24:08.308" level="INFO">${resposta} = {
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Implbm5pZmVyODNAZXhhbXBsZS5uZXQiLCJwYXNzd29yZCI6IlpVTnF0TWp2NkwiLCJpYXQiOj...</msg>
<status status="PASS" starttime="20250214 15:24:08.307" endtime="20250214 15:24:08.308"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resposta_status}</var>
<arg>${response.status_code}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:24:08.310" level="INFO">${resposta_status} = 200</msg>
<status status="PASS" starttime="20250214 15:24:08.309" endtime="20250214 15:24:08.310"/>
</kw>
<kw name="To Json" library="RequestsLibrary">
<var>${resposta}</var>
<arg>${resposta}</arg>
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<msg timestamp="20250214 15:24:08.311" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20250214 15:24:08.312" level="INFO">To JSON using : content={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Implbm5pZmVyODNAZXhhbXBsZS5uZXQiLCJwYXNzd29yZCI6IlpVTnF0TWp2NkwiLCJpYXQiOjE3Mzk1NTc0NDgsImV4cCI6MTczOTU1ODA0OH0.fWqEoPfYFoL8VdQxJWG2T1l0smoocNNeynMhdVwxxeE"
} </msg>
<msg timestamp="20250214 15:24:08.312" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20250214 15:24:08.312" level="INFO">${resposta} = {'message': 'Login realizado com sucesso', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Implbm5pZmVyODNAZXhhbXBsZS5uZXQiLCJwYXNzd29yZCI6IlpVTnF0TWp2NkwiLCJpYXQiOjE3Mzk1NTc...</msg>
<status status="PASS" starttime="20250214 15:24:08.311" endtime="20250214 15:24:08.312"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${resposta}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:08.314" level="INFO">${resposta} = {'message': 'Login realizado com sucesso', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Implbm5pZmVyODNAZXhhbXBsZS5uZXQiLCJwYXNzd29yZCI6IlpVTnF0TWp2NkwiLCJpYXQiOjE3Mzk1NTc...</msg>
<status status="PASS" starttime="20250214 15:24:08.313" endtime="20250214 15:24:08.314"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${resposta_status}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:08.315" level="INFO">${resposta_status} = 200</msg>
<status status="PASS" starttime="20250214 15:24:08.314" endtime="20250214 15:24:08.315"/>
</kw>
<status status="PASS" starttime="20250214 15:24:07.943" endtime="20250214 15:24:08.315"/>
</kw>
<if>
<branch type="IF" condition="&quot;${STATUSCODE}&quot; == &quot;200&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${token}</var>
<arg>${resposta['authorization']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:24:08.317" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Implbm5pZmVyODNAZXhhbXBsZS5uZXQiLCJwYXNzd29yZCI6IlpVTnF0TWp2NkwiLCJpYXQiOjE3Mzk1NTc0NDgsImV4cCI6MTczOTU1ODA0OH0.fWqEoPfYFoL8VdQxJWG2T1l0smoocNNe...</msg>
<status status="PASS" starttime="20250214 15:24:08.316" endtime="20250214 15:24:08.317"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${token}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:08.318" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Implbm5pZmVyODNAZXhhbXBsZS5uZXQiLCJwYXNzd29yZCI6IlpVTnF0TWp2NkwiLCJpYXQiOjE3Mzk1NTc0NDgsImV4cCI6MTczOTU1ODA0OH0.fWqEoPfYFoL8VdQxJWG2T1l0smoocNNe...</msg>
<status status="PASS" starttime="20250214 15:24:08.317" endtime="20250214 15:24:08.318"/>
</kw>
<status status="PASS" starttime="20250214 15:24:08.316" endtime="20250214 15:24:08.318"/>
</branch>
<status status="PASS" starttime="20250214 15:24:08.316" endtime="20250214 15:24:08.318"/>
</if>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${resposta}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:08.319" level="INFO">${resposta} = {'message': 'Login realizado com sucesso', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Implbm5pZmVyODNAZXhhbXBsZS5uZXQiLCJwYXNzd29yZCI6IlpVTnF0TWp2NkwiLCJpYXQiOjE3Mzk1NTc...</msg>
<status status="PASS" starttime="20250214 15:24:08.318" endtime="20250214 15:24:08.319"/>
</kw>
<status status="PASS" starttime="20250214 15:24:07.942" endtime="20250214 15:24:08.319"/>
</kw>
<status status="PASS" starttime="20250214 15:24:07.940" endtime="20250214 15:24:08.319"/>
</kw>
<status status="PASS" starttime="20250214 15:24:07.940" endtime="20250214 15:24:08.319"/>
</kw>
<kw name="Então sistema retornará status code &quot;200&quot; e gerará token corretamente" library="loginApiSteps" sourcename="Então sistema retornará status code &quot;${STATUSCODE}&quot; e gerará token corretamente">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${token}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20250214 15:24:08.321" level="INFO">Length is 211</msg>
<status status="PASS" starttime="20250214 15:24:08.321" endtime="20250214 15:24:08.321"/>
</kw>
<kw name="Então sistema terá o retorno de status code &quot;${STATUSCODE}&quot;" library="commons_api" sourcename="Então sistema terá o retorno de status code &quot;${STATUSCODE}&quot;">
<kw name="Convert To Number" library="BuiltIn">
<var>${STATUSCODE}</var>
<arg>${STATUSCODE}</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20250214 15:24:08.323" level="INFO">${STATUSCODE} = 200.0</msg>
<status status="PASS" starttime="20250214 15:24:08.322" endtime="20250214 15:24:08.323"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${resposta_status}</arg>
<arg>${STATUSCODE}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20250214 15:24:08.324" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'float'&gt;</msg>
<status status="PASS" starttime="20250214 15:24:08.323" endtime="20250214 15:24:08.324"/>
</kw>
<status status="PASS" starttime="20250214 15:24:08.321" endtime="20250214 15:24:08.325"/>
</kw>
<status status="PASS" starttime="20250214 15:24:08.320" endtime="20250214 15:24:08.325"/>
</kw>
<status status="PASS" starttime="20250214 15:24:07.001" endtime="20250214 15:24:08.325"/>
</test>
<test id="s1-s1-t2" name="Cenário 02: Login com usuario inválido" line="12">
<kw name="gerar usuário para testes de login" library="commons_api" type="SETUP">
<kw name="First Name" library="FakerLibrary">
<var>${nome_login}</var>
<msg timestamp="20250214 15:24:08.329" level="INFO">${nome_login} = David</msg>
<status status="PASS" starttime="20250214 15:24:08.329" endtime="20250214 15:24:08.329"/>
</kw>
<kw name="Email" library="FakerLibrary">
<var>${email_login}</var>
<msg timestamp="20250214 15:24:08.331" level="INFO">${email_login} = jdaniels@example.com</msg>
<status status="PASS" starttime="20250214 15:24:08.330" endtime="20250214 15:24:08.331"/>
</kw>
<kw name="Password" library="FakerLibrary">
<var>${senha_login}</var>
<arg>special_chars=FALSE</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20250214 15:24:08.333" level="INFO">${senha_login} = iTnc2U7do0</msg>
<status status="PASS" starttime="20250214 15:24:08.332" endtime="20250214 15:24:08.333"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250214 15:24:08.840" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20250214 15:24:08.333" endtime="20250214 15:24:08.840"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${email_login}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:08.841" level="INFO">${email_login} = jdaniels@example.com</msg>
<status status="PASS" starttime="20250214 15:24:08.840" endtime="20250214 15:24:08.841"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${senha_login}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:08.842" level="INFO">${senha_login} = iTnc2U7do0</msg>
<status status="PASS" starttime="20250214 15:24:08.842" endtime="20250214 15:24:08.842"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${nome_login}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:08.843" level="INFO">${nome_login} = David</msg>
<status status="PASS" starttime="20250214 15:24:08.843" endtime="20250214 15:24:08.843"/>
</kw>
<kw name="criar usuário" library="usuariosApiKeywords">
<arg>${nome_login}</arg>
<arg>${email_login}</arg>
<arg>${senha_login}</arg>
<arg>true</arg>
<kw name="Gerar payload para cadastro de cliente" library="usuariosApiKeywords">
<arg>${nome}</arg>
<arg>${email}</arg>
<arg>${senha}</arg>
<arg>${adm}</arg>
<kw name="Criar Payload Para Cadastro De Cliente" library="createPayloads">
<var>${body}</var>
<arg>${NOME}</arg>
<arg>${EMAIL}</arg>
<arg>${SENHA}</arg>
<arg>${ADM}</arg>
<msg timestamp="20250214 15:24:08.847" level="INFO">${body} = {
    "nome": "David",
    "email": "jdaniels@example.com",
    "password": "iTnc2U7do0",
    "administrador": "true"
}</msg>
<status status="PASS" starttime="20250214 15:24:08.846" endtime="20250214 15:24:08.847"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${body}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:08.848" level="INFO">${body} = {
    "nome": "David",
    "email": "jdaniels@example.com",
    "password": "iTnc2U7do0",
    "administrador": "true"
}</msg>
<status status="PASS" starttime="20250214 15:24:08.847" endtime="20250214 15:24:08.848"/>
</kw>
<status status="PASS" starttime="20250214 15:24:08.845" endtime="20250214 15:24:08.848"/>
</kw>
<kw name="POST request test" library="commons_api">
<arg>/usuarios</arg>
<arg>${body}</arg>
<arg>201</arg>
<kw name="criar sessao" library="commons_api">
<kw name="Create Session" library="RequestsLibrary">
<arg>api</arg>
<arg>${BASE_URL_API}</arg>
<arg>verify=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20250214 15:24:08.850" level="INFO">Creating Session using : alias=api, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20250214 15:24:08.849" endtime="20250214 15:24:08.850"/>
</kw>
<status status="PASS" starttime="20250214 15:24:08.849" endtime="20250214 15:24:08.850"/>
</kw>
<kw name="Convert To Json" library="JsonValidator">
<var>${body}</var>
<arg>${body}</arg>
<doc>Convert a python object to JsonType.</doc>
<msg timestamp="20250214 15:24:08.851" level="INFO">${body} = {'nome': 'David', 'email': 'jdaniels@example.com', 'password': 'iTnc2U7do0', 'administrador': 'true'}</msg>
<status status="PASS" starttime="20250214 15:24:08.850" endtime="20250214 15:24:08.851"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20250214 15:24:08.851" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" starttime="20250214 15:24:08.851" endtime="20250214 15:24:08.851"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>api</arg>
<arg>url=${url}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=${status}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20250214 15:24:09.221" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '101'} 
 body=b'{"nome": "David", "email": "jdaniels@example.com", "password": "iTnc2U7do0", "administrador": "true"}' 
 </msg>
<msg timestamp="20250214 15:24:09.221" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': 'aaf9975032df2e7ba73ad82812a1d8a6', 'Date': 'Fri, 14 Feb 2025 18:24:09 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "qflhXhO3mGXwhNik"
} 
 </msg>
<msg timestamp="20250214 15:24:09.221" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20250214 15:24:08.852" endtime="20250214 15:24:09.222"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resposta}</var>
<arg>${response.content}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:24:09.224" level="INFO">${resposta} = {
    "message": "Cadastro realizado com sucesso",
    "_id": "qflhXhO3mGXwhNik"
}</msg>
<status status="PASS" starttime="20250214 15:24:09.222" endtime="20250214 15:24:09.224"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resposta_status}</var>
<arg>${response.status_code}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:24:09.226" level="INFO">${resposta_status} = 201</msg>
<status status="PASS" starttime="20250214 15:24:09.224" endtime="20250214 15:24:09.226"/>
</kw>
<kw name="To Json" library="RequestsLibrary">
<var>${resposta}</var>
<arg>${resposta}</arg>
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<msg timestamp="20250214 15:24:09.227" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20250214 15:24:09.228" level="INFO">To JSON using : content={
    "message": "Cadastro realizado com sucesso",
    "_id": "qflhXhO3mGXwhNik"
} </msg>
<msg timestamp="20250214 15:24:09.228" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20250214 15:24:09.228" level="INFO">${resposta} = {'message': 'Cadastro realizado com sucesso', '_id': 'qflhXhO3mGXwhNik'}</msg>
<status status="PASS" starttime="20250214 15:24:09.227" endtime="20250214 15:24:09.229"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${resposta}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:09.229" level="INFO">${resposta} = {'message': 'Cadastro realizado com sucesso', '_id': 'qflhXhO3mGXwhNik'}</msg>
<status status="PASS" starttime="20250214 15:24:09.229" endtime="20250214 15:24:09.230"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${resposta_status}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:09.231" level="INFO">${resposta_status} = 201</msg>
<status status="PASS" starttime="20250214 15:24:09.230" endtime="20250214 15:24:09.231"/>
</kw>
<status status="PASS" starttime="20250214 15:24:08.848" endtime="20250214 15:24:09.231"/>
</kw>
<status status="PASS" starttime="20250214 15:24:08.844" endtime="20250214 15:24:09.232"/>
</kw>
<status status="PASS" starttime="20250214 15:24:08.328" endtime="20250214 15:24:09.232"/>
</kw>
<kw name="Quando acionar endpoint para efetuar login, para verificar mensagem de erro, com usuário &quot;${NOME}&quot; e Senha &quot;1234&quot;" library="loginApiSteps" sourcename="Quando acionar endpoint para efetuar login, para verificar mensagem de erro, com usuário &quot;${NOME}&quot; e Senha &quot;${SENHA}&quot;">
<kw name="efetuar login" library="loginApiKeywords">
<arg>${NOME}</arg>
<arg>${SENHA}</arg>
<arg>401</arg>
<kw name="Gerar payload para login" library="loginApiKeywords">
<arg>${EMAIL}</arg>
<arg>${SENHA}</arg>
<kw name="Criar Payload Para Gerar Token" library="createPayloads">
<var>${body}</var>
<arg>${EMAIL}</arg>
<arg>${SENHA}</arg>
<msg timestamp="20250214 15:24:09.238" level="INFO">${body} = {
    "email": "felipe@gmail.com.br",
    "password": "1234"
}</msg>
<status status="PASS" starttime="20250214 15:24:09.237" endtime="20250214 15:24:09.238"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${body}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:09.250" level="INFO">${body} = {
    "email": "felipe@gmail.com.br",
    "password": "1234"
}</msg>
<status status="PASS" starttime="20250214 15:24:09.244" endtime="20250214 15:24:09.250"/>
</kw>
<status status="PASS" starttime="20250214 15:24:09.235" endtime="20250214 15:24:09.250"/>
</kw>
<kw name="gerar token" library="commons_api">
<arg>${EMAIL}</arg>
<arg>${SENHA}</arg>
<arg>${STATUSCODE}</arg>
<kw name="POST request test" library="commons_api">
<arg>/login</arg>
<arg>${body}</arg>
<arg>${STATUSCODE}</arg>
<kw name="criar sessao" library="commons_api">
<kw name="Create Session" library="RequestsLibrary">
<arg>api</arg>
<arg>${BASE_URL_API}</arg>
<arg>verify=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20250214 15:24:09.256" level="INFO">Creating Session using : alias=api, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20250214 15:24:09.255" endtime="20250214 15:24:09.256"/>
</kw>
<status status="PASS" starttime="20250214 15:24:09.254" endtime="20250214 15:24:09.257"/>
</kw>
<kw name="Convert To Json" library="JsonValidator">
<var>${body}</var>
<arg>${body}</arg>
<doc>Convert a python object to JsonType.</doc>
<msg timestamp="20250214 15:24:09.258" level="INFO">${body} = {'email': 'felipe@gmail.com.br', 'password': '1234'}</msg>
<status status="PASS" starttime="20250214 15:24:09.257" endtime="20250214 15:24:09.258"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20250214 15:24:09.260" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" starttime="20250214 15:24:09.258" endtime="20250214 15:24:09.260"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>api</arg>
<arg>url=${url}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=${status}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20250214 15:24:09.646" level="INFO">POST Request : url=https://serverest.dev/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '52'} 
 body=b'{"email": "felipe@gmail.com.br", "password": "1234"}' 
 </msg>
<msg timestamp="20250214 15:24:09.646" level="INFO">POST Response : url=https://serverest.dev/login 
 status=401, reason=Unauthorized 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '80d2dd7dae4870a4a2a103980ef52c5f', 'Date': 'Fri, 14 Feb 2025 18:24:09 GMT', 'Server': 'Google Frontend', 'Content-Length': '48'} 
 body={
    "message": "Email e/ou senha inválidos"
} 
 </msg>
<msg timestamp="20250214 15:24:09.646" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<status status="PASS" starttime="20250214 15:24:09.261" endtime="20250214 15:24:09.646"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resposta}</var>
<arg>${response.content}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:24:09.647" level="INFO">${resposta} = {
    "message": "Email e/ou senha inv\xc3\xa1lidos"
}</msg>
<status status="PASS" starttime="20250214 15:24:09.646" endtime="20250214 15:24:09.647"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${resposta_status}</var>
<arg>${response.status_code}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250214 15:24:09.649" level="INFO">${resposta_status} = 401</msg>
<status status="PASS" starttime="20250214 15:24:09.648" endtime="20250214 15:24:09.649"/>
</kw>
<kw name="To Json" library="RequestsLibrary">
<var>${resposta}</var>
<arg>${resposta}</arg>
<doc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</doc>
<msg timestamp="20250214 15:24:09.650" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20250214 15:24:09.650" level="INFO">To JSON using : content={
    "message": "Email e/ou senha inválidos"
} </msg>
<msg timestamp="20250214 15:24:09.650" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20250214 15:24:09.650" level="INFO">${resposta} = {'message': 'Email e/ou senha inválidos'}</msg>
<status status="PASS" starttime="20250214 15:24:09.650" endtime="20250214 15:24:09.651"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${resposta}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:09.652" level="INFO">${resposta} = {'message': 'Email e/ou senha inválidos'}</msg>
<status status="PASS" starttime="20250214 15:24:09.651" endtime="20250214 15:24:09.652"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${resposta_status}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:09.653" level="INFO">${resposta_status} = 401</msg>
<status status="PASS" starttime="20250214 15:24:09.652" endtime="20250214 15:24:09.653"/>
</kw>
<status status="PASS" starttime="20250214 15:24:09.252" endtime="20250214 15:24:09.653"/>
</kw>
<if>
<branch type="IF" condition="&quot;${STATUSCODE}&quot; == &quot;200&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${token}</var>
<arg>${resposta['authorization']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250214 15:24:09.654" endtime="20250214 15:24:09.655"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${token}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20250214 15:24:09.655" endtime="20250214 15:24:09.655"/>
</kw>
<status status="NOT RUN" starttime="20250214 15:24:09.654" endtime="20250214 15:24:09.655"/>
</branch>
<status status="PASS" starttime="20250214 15:24:09.654" endtime="20250214 15:24:09.656"/>
</if>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${resposta}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250214 15:24:09.656" level="INFO">${resposta} = {'message': 'Email e/ou senha inválidos'}</msg>
<status status="PASS" starttime="20250214 15:24:09.656" endtime="20250214 15:24:09.656"/>
</kw>
<status status="PASS" starttime="20250214 15:24:09.251" endtime="20250214 15:24:09.657"/>
</kw>
<status status="PASS" starttime="20250214 15:24:09.234" endtime="20250214 15:24:09.657"/>
</kw>
<status status="PASS" starttime="20250214 15:24:09.233" endtime="20250214 15:24:09.657"/>
</kw>
<kw name="Então sistema terá o retorno de status code &quot;401&quot;" library="commons_api" sourcename="Então sistema terá o retorno de status code &quot;${STATUSCODE}&quot;">
<kw name="Convert To Number" library="BuiltIn">
<var>${STATUSCODE}</var>
<arg>${STATUSCODE}</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20250214 15:24:09.658" level="INFO">${STATUSCODE} = 401.0</msg>
<status status="PASS" starttime="20250214 15:24:09.658" endtime="20250214 15:24:09.658"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${resposta_status}</arg>
<arg>${STATUSCODE}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20250214 15:24:09.659" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'float'&gt;</msg>
<status status="PASS" starttime="20250214 15:24:09.658" endtime="20250214 15:24:09.659"/>
</kw>
<status status="PASS" starttime="20250214 15:24:09.657" endtime="20250214 15:24:09.659"/>
</kw>
<kw name="E apresentará a mensagem &quot;Email e/ou senha inválidos&quot;" library="commons_api" sourcename="E apresentará a mensagem &quot;${msg}&quot;">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${msg}</arg>
<arg>${resposta['message']}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250214 15:24:09.661" endtime="20250214 15:24:09.662"/>
</kw>
<status status="PASS" starttime="20250214 15:24:09.659" endtime="20250214 15:24:09.662"/>
</kw>
<status status="PASS" starttime="20250214 15:24:08.326" endtime="20250214 15:24:09.662"/>
</test>
<doc>Testes de login e logout</doc>
<status status="PASS" starttime="20250214 15:24:05.679" endtime="20250214 15:24:09.663"/>
</suite>
<status status="PASS" starttime="20250214 15:24:05.648" endtime="20250214 15:24:09.664"/>
</suite>
<statistics>
<total>
<stat pass="2" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="2" fail="0" skip="0" id="s1" name="Suites">Suites</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="loginApiTest">Suites.loginApiTest</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20250214 15:24:06.984" level="WARN">Imported resource file 'C:\Users\55619\Dropbox\My PC (DESKTOP-8Q92QEK)\Documents\projetos\servRest\automacao-com-robot-framework-api-web\API\resources\feature\login\loginApiVariables.resource' is empty.</msg>
<msg timestamp="20250214 15:24:07.938" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20250214 15:24:08.311" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20250214 15:24:09.227" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
<msg timestamp="20250214 15:24:09.650" level="WARN">Keyword 'RequestsLibrary.To Json' is deprecated. Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</msg>
</errors>
</robot>
